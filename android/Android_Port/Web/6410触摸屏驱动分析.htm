<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0061)http://www.cnblogs.com/liu_xf/archive/2011/06/22/2086750.html -->
<html version="g42dymwpi--nx"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link type="text/css" rel="stylesheet" href="./6410触摸屏驱动分析_files/common.css">
<link id="MainCss" type="text/css" rel="stylesheet" href="./6410触摸屏驱动分析_files/style2.css">

<link type="text/css" rel="stylesheet" href="./6410触摸屏驱动分析_files/shStyle.css">



  

 


<style>@-moz-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@-webkit-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@-o-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}embed,object{animation-duration:.001s;-ms-animation-duration:.001s;-moz-animation-duration:.001s;-webkit-animation-duration:.001s;-o-animation-duration:.001s;animation-name:nodeInserted;-ms-animation-name:nodeInserted;-moz-animation-name:nodeInserted;-webkit-animation-name:nodeInserted;-o-animation-name:nodeInserted;}</style></head>
<body>






<div id="main">
	
	
	<div class="post">
		<h2>
			<a id="cb_post_title_url" href="./6410触摸屏驱动分析_files/6410触摸屏驱动分析.htm">（原创）6410触摸屏驱动分析（s3c-ts.c）（Linux）（分析）</a>
		</h2>
		<div id="cnblogs_post_body"><p><span><strong>摘要：</strong></span></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;分析内核s3c-ts.c源码，看它是如何采集坐标信息及防抖动处理的。</p>
<p><span><strong>介绍：</strong></span></p>
<p><span><strong>&nbsp;&nbsp;&nbsp; </strong>直接上源码吧，完全注释：</span></p>
<p><span>
</span></p><div class="cnblogs_Highlighter">
<div><div id="highlighter_265569" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://www.cnblogs.com/liu_xf/archive/2011/06/22/2086750.html#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div><div class="line number74 index73 alt1">74</div><div class="line number75 index74 alt2">75</div><div class="line number76 index75 alt1">76</div><div class="line number77 index76 alt2">77</div><div class="line number78 index77 alt1">78</div><div class="line number79 index78 alt2">79</div><div class="line number80 index79 alt1">80</div><div class="line number81 index80 alt2">81</div><div class="line number82 index81 alt1">82</div><div class="line number83 index82 alt2">83</div><div class="line number84 index83 alt1">84</div><div class="line number85 index84 alt2">85</div><div class="line number86 index85 alt1">86</div><div class="line number87 index86 alt2">87</div><div class="line number88 index87 alt1">88</div><div class="line number89 index88 alt2">89</div><div class="line number90 index89 alt1">90</div><div class="line number91 index90 alt2">91</div><div class="line number92 index91 alt1">92</div><div class="line number93 index92 alt2">93</div><div class="line number94 index93 alt1">94</div><div class="line number95 index94 alt2">95</div><div class="line number96 index95 alt1">96</div><div class="line number97 index96 alt2">97</div><div class="line number98 index97 alt1">98</div><div class="line number99 index98 alt2">99</div><div class="line number100 index99 alt1">100</div><div class="line number101 index100 alt2">101</div><div class="line number102 index101 alt1">102</div><div class="line number103 index102 alt2">103</div><div class="line number104 index103 alt1">104</div><div class="line number105 index104 alt2">105</div><div class="line number106 index105 alt1">106</div><div class="line number107 index106 alt2">107</div><div class="line number108 index107 alt1">108</div><div class="line number109 index108 alt2">109</div><div class="line number110 index109 alt1">110</div><div class="line number111 index110 alt2">111</div><div class="line number112 index111 alt1">112</div><div class="line number113 index112 alt2">113</div><div class="line number114 index113 alt1">114</div><div class="line number115 index114 alt2">115</div><div class="line number116 index115 alt1">116</div><div class="line number117 index116 alt2">117</div><div class="line number118 index117 alt1">118</div><div class="line number119 index118 alt2">119</div><div class="line number120 index119 alt1">120</div><div class="line number121 index120 alt2">121</div><div class="line number122 index121 alt1">122</div><div class="line number123 index122 alt2">123</div><div class="line number124 index123 alt1">124</div><div class="line number125 index124 alt2">125</div><div class="line number126 index125 alt1">126</div><div class="line number127 index126 alt2">127</div><div class="line number128 index127 alt1">128</div><div class="line number129 index128 alt2">129</div><div class="line number130 index129 alt1">130</div><div class="line number131 index130 alt2">131</div><div class="line number132 index131 alt1">132</div><div class="line number133 index132 alt2">133</div><div class="line number134 index133 alt1">134</div><div class="line number135 index134 alt2">135</div><div class="line number136 index135 alt1">136</div><div class="line number137 index136 alt2">137</div><div class="line number138 index137 alt1">138</div><div class="line number139 index138 alt2">139</div><div class="line number140 index139 alt1">140</div><div class="line number141 index140 alt2">141</div><div class="line number142 index141 alt1">142</div><div class="line number143 index142 alt2">143</div><div class="line number144 index143 alt1">144</div><div class="line number145 index144 alt2">145</div><div class="line number146 index145 alt1">146</div><div class="line number147 index146 alt2">147</div><div class="line number148 index147 alt1">148</div><div class="line number149 index148 alt2">149</div><div class="line number150 index149 alt1">150</div><div class="line number151 index150 alt2">151</div><div class="line number152 index151 alt1">152</div><div class="line number153 index152 alt2">153</div><div class="line number154 index153 alt1">154</div><div class="line number155 index154 alt2">155</div><div class="line number156 index155 alt1">156</div><div class="line number157 index156 alt2">157</div><div class="line number158 index157 alt1">158</div><div class="line number159 index158 alt2">159</div><div class="line number160 index159 alt1">160</div><div class="line number161 index160 alt2">161</div><div class="line number162 index161 alt1">162</div><div class="line number163 index162 alt2">163</div><div class="line number164 index163 alt1">164</div><div class="line number165 index164 alt2">165</div><div class="line number166 index165 alt1">166</div><div class="line number167 index166 alt2">167</div><div class="line number168 index167 alt1">168</div><div class="line number169 index168 alt2">169</div><div class="line number170 index169 alt1">170</div><div class="line number171 index170 alt2">171</div><div class="line number172 index171 alt1">172</div><div class="line number173 index172 alt2">173</div><div class="line number174 index173 alt1">174</div><div class="line number175 index174 alt2">175</div><div class="line number176 index175 alt1">176</div><div class="line number177 index176 alt2">177</div><div class="line number178 index177 alt1">178</div><div class="line number179 index178 alt2">179</div><div class="line number180 index179 alt1">180</div><div class="line number181 index180 alt2">181</div><div class="line number182 index181 alt1">182</div><div class="line number183 index182 alt2">183</div><div class="line number184 index183 alt1">184</div><div class="line number185 index184 alt2">185</div><div class="line number186 index185 alt1">186</div><div class="line number187 index186 alt2">187</div><div class="line number188 index187 alt1">188</div><div class="line number189 index188 alt2">189</div><div class="line number190 index189 alt1">190</div><div class="line number191 index190 alt2">191</div><div class="line number192 index191 alt1">192</div><div class="line number193 index192 alt2">193</div><div class="line number194 index193 alt1">194</div><div class="line number195 index194 alt2">195</div><div class="line number196 index195 alt1">196</div><div class="line number197 index196 alt2">197</div><div class="line number198 index197 alt1">198</div><div class="line number199 index198 alt2">199</div><div class="line number200 index199 alt1">200</div><div class="line number201 index200 alt2">201</div><div class="line number202 index201 alt1">202</div><div class="line number203 index202 alt2">203</div><div class="line number204 index203 alt1">204</div><div class="line number205 index204 alt2">205</div><div class="line number206 index205 alt1">206</div><div class="line number207 index206 alt2">207</div><div class="line number208 index207 alt1">208</div><div class="line number209 index208 alt2">209</div><div class="line number210 index209 alt1">210</div><div class="line number211 index210 alt2">211</div><div class="line number212 index211 alt1">212</div><div class="line number213 index212 alt2">213</div><div class="line number214 index213 alt1">214</div><div class="line number215 index214 alt2">215</div><div class="line number216 index215 alt1">216</div><div class="line number217 index216 alt2">217</div><div class="line number218 index217 alt1">218</div><div class="line number219 index218 alt2">219</div><div class="line number220 index219 alt1">220</div><div class="line number221 index220 alt2">221</div><div class="line number222 index221 alt1">222</div><div class="line number223 index222 alt2">223</div><div class="line number224 index223 alt1">224</div><div class="line number225 index224 alt2">225</div><div class="line number226 index225 alt1">226</div><div class="line number227 index226 alt2">227</div><div class="line number228 index227 alt1">228</div><div class="line number229 index228 alt2">229</div><div class="line number230 index229 alt1">230</div><div class="line number231 index230 alt2">231</div><div class="line number232 index231 alt1">232</div><div class="line number233 index232 alt2">233</div><div class="line number234 index233 alt1">234</div><div class="line number235 index234 alt2">235</div><div class="line number236 index235 alt1">236</div><div class="line number237 index236 alt2">237</div><div class="line number238 index237 alt1">238</div><div class="line number239 index238 alt2">239</div><div class="line number240 index239 alt1">240</div><div class="line number241 index240 alt2">241</div><div class="line number242 index241 alt1">242</div><div class="line number243 index242 alt2">243</div><div class="line number244 index243 alt1">244</div><div class="line number245 index244 alt2">245</div><div class="line number246 index245 alt1">246</div><div class="line number247 index246 alt2">247</div><div class="line number248 index247 alt1">248</div><div class="line number249 index248 alt2">249</div><div class="line number250 index249 alt1">250</div><div class="line number251 index250 alt2">251</div><div class="line number252 index251 alt1">252</div><div class="line number253 index252 alt2">253</div><div class="line number254 index253 alt1">254</div><div class="line number255 index254 alt2">255</div><div class="line number256 index255 alt1">256</div><div class="line number257 index256 alt2">257</div><div class="line number258 index257 alt1">258</div><div class="line number259 index258 alt2">259</div><div class="line number260 index259 alt1">260</div><div class="line number261 index260 alt2">261</div><div class="line number262 index261 alt1">262</div><div class="line number263 index262 alt2">263</div><div class="line number264 index263 alt1">264</div><div class="line number265 index264 alt2">265</div><div class="line number266 index265 alt1">266</div><div class="line number267 index266 alt2">267</div><div class="line number268 index267 alt1">268</div><div class="line number269 index268 alt2">269</div><div class="line number270 index269 alt1">270</div><div class="line number271 index270 alt2">271</div><div class="line number272 index271 alt1">272</div><div class="line number273 index272 alt2">273</div><div class="line number274 index273 alt1">274</div><div class="line number275 index274 alt2">275</div><div class="line number276 index275 alt1">276</div><div class="line number277 index276 alt2">277</div><div class="line number278 index277 alt1">278</div><div class="line number279 index278 alt2">279</div><div class="line number280 index279 alt1">280</div><div class="line number281 index280 alt2">281</div><div class="line number282 index281 alt1">282</div><div class="line number283 index282 alt2">283</div><div class="line number284 index283 alt1">284</div><div class="line number285 index284 alt2">285</div><div class="line number286 index285 alt1">286</div><div class="line number287 index286 alt2">287</div><div class="line number288 index287 alt1">288</div><div class="line number289 index288 alt2">289</div><div class="line number290 index289 alt1">290</div><div class="line number291 index290 alt2">291</div><div class="line number292 index291 alt1">292</div><div class="line number293 index292 alt2">293</div><div class="line number294 index293 alt1">294</div><div class="line number295 index294 alt2">295</div><div class="line number296 index295 alt1">296</div><div class="line number297 index296 alt2">297</div><div class="line number298 index297 alt1">298</div><div class="line number299 index298 alt2">299</div><div class="line number300 index299 alt1">300</div><div class="line number301 index300 alt2">301</div><div class="line number302 index301 alt1">302</div><div class="line number303 index302 alt2">303</div><div class="line number304 index303 alt1">304</div><div class="line number305 index304 alt2">305</div><div class="line number306 index305 alt1">306</div><div class="line number307 index306 alt2">307</div><div class="line number308 index307 alt1">308</div><div class="line number309 index308 alt2">309</div><div class="line number310 index309 alt1">310</div><div class="line number311 index310 alt2">311</div><div class="line number312 index311 alt1">312</div><div class="line number313 index312 alt2">313</div><div class="line number314 index313 alt1">314</div><div class="line number315 index314 alt2">315</div><div class="line number316 index315 alt1">316</div><div class="line number317 index316 alt2">317</div><div class="line number318 index317 alt1">318</div><div class="line number319 index318 alt2">319</div><div class="line number320 index319 alt1">320</div><div class="line number321 index320 alt2">321</div><div class="line number322 index321 alt1">322</div><div class="line number323 index322 alt2">323</div><div class="line number324 index323 alt1">324</div><div class="line number325 index324 alt2">325</div><div class="line number326 index325 alt1">326</div><div class="line number327 index326 alt2">327</div><div class="line number328 index327 alt1">328</div><div class="line number329 index328 alt2">329</div><div class="line number330 index329 alt1">330</div><div class="line number331 index330 alt2">331</div><div class="line number332 index331 alt1">332</div><div class="line number333 index332 alt2">333</div><div class="line number334 index333 alt1">334</div><div class="line number335 index334 alt2">335</div><div class="line number336 index335 alt1">336</div><div class="line number337 index336 alt2">337</div><div class="line number338 index337 alt1">338</div><div class="line number339 index338 alt2">339</div><div class="line number340 index339 alt1">340</div><div class="line number341 index340 alt2">341</div><div class="line number342 index341 alt1">342</div><div class="line number343 index342 alt2">343</div><div class="line number344 index343 alt1">344</div><div class="line number345 index344 alt2">345</div><div class="line number346 index345 alt1">346</div><div class="line number347 index346 alt2">347</div><div class="line number348 index347 alt1">348</div><div class="line number349 index348 alt2">349</div><div class="line number350 index349 alt1">350</div><div class="line number351 index350 alt2">351</div><div class="line number352 index351 alt1">352</div><div class="line number353 index352 alt2">353</div><div class="line number354 index353 alt1">354</div><div class="line number355 index354 alt2">355</div><div class="line number356 index355 alt1">356</div><div class="line number357 index356 alt2">357</div><div class="line number358 index357 alt1">358</div><div class="line number359 index358 alt2">359</div><div class="line number360 index359 alt1">360</div><div class="line number361 index360 alt2">361</div><div class="line number362 index361 alt1">362</div><div class="line number363 index362 alt2">363</div><div class="line number364 index363 alt1">364</div><div class="line number365 index364 alt2">365</div><div class="line number366 index365 alt1">366</div><div class="line number367 index366 alt2">367</div><div class="line number368 index367 alt1">368</div><div class="line number369 index368 alt2">369</div><div class="line number370 index369 alt1">370</div><div class="line number371 index370 alt2">371</div><div class="line number372 index371 alt1">372</div><div class="line number373 index372 alt2">373</div><div class="line number374 index373 alt1">374</div><div class="line number375 index374 alt2">375</div><div class="line number376 index375 alt1">376</div><div class="line number377 index376 alt2">377</div><div class="line number378 index377 alt1">378</div><div class="line number379 index378 alt2">379</div><div class="line number380 index379 alt1">380</div><div class="line number381 index380 alt2">381</div><div class="line number382 index381 alt1">382</div><div class="line number383 index382 alt2">383</div><div class="line number384 index383 alt1">384</div><div class="line number385 index384 alt2">385</div><div class="line number386 index385 alt1">386</div><div class="line number387 index386 alt2">387</div><div class="line number388 index387 alt1">388</div><div class="line number389 index388 alt2">389</div><div class="line number390 index389 alt1">390</div><div class="line number391 index390 alt2">391</div><div class="line number392 index391 alt1">392</div><div class="line number393 index392 alt2">393</div><div class="line number394 index393 alt1">394</div><div class="line number395 index394 alt2">395</div><div class="line number396 index395 alt1">396</div><div class="line number397 index396 alt2">397</div><div class="line number398 index397 alt1">398</div><div class="line number399 index398 alt2">399</div><div class="line number400 index399 alt1">400</div><div class="line number401 index400 alt2">401</div><div class="line number402 index401 alt1">402</div><div class="line number403 index402 alt2">403</div><div class="line number404 index403 alt1">404</div><div class="line number405 index404 alt2">405</div><div class="line number406 index405 alt1">406</div><div class="line number407 index406 alt2">407</div><div class="line number408 index407 alt1">408</div><div class="line number409 index408 alt2">409</div><div class="line number410 index409 alt1">410</div><div class="line number411 index410 alt2">411</div><div class="line number412 index411 alt1">412</div><div class="line number413 index412 alt2">413</div><div class="line number414 index413 alt1">414</div><div class="line number415 index414 alt2">415</div><div class="line number416 index415 alt1">416</div><div class="line number417 index416 alt2">417</div><div class="line number418 index417 alt1">418</div><div class="line number419 index418 alt2">419</div><div class="line number420 index419 alt1">420</div><div class="line number421 index420 alt2">421</div><div class="line number422 index421 alt1">422</div><div class="line number423 index422 alt2">423</div><div class="line number424 index423 alt1">424</div><div class="line number425 index424 alt2">425</div><div class="line number426 index425 alt1">426</div><div class="line number427 index426 alt2">427</div><div class="line number428 index427 alt1">428</div><div class="line number429 index428 alt2">429</div><div class="line number430 index429 alt1">430</div><div class="line number431 index430 alt2">431</div><div class="line number432 index431 alt1">432</div><div class="line number433 index432 alt2">433</div><div class="line number434 index433 alt1">434</div><div class="line number435 index434 alt2">435</div><div class="line number436 index435 alt1">436</div><div class="line number437 index436 alt2">437</div><div class="line number438 index437 alt1">438</div><div class="line number439 index438 alt2">439</div><div class="line number440 index439 alt1">440</div><div class="line number441 index440 alt2">441</div><div class="line number442 index441 alt1">442</div><div class="line number443 index442 alt2">443</div><div class="line number444 index443 alt1">444</div><div class="line number445 index444 alt2">445</div><div class="line number446 index445 alt1">446</div><div class="line number447 index446 alt2">447</div><div class="line number448 index447 alt1">448</div><div class="line number449 index448 alt2">449</div><div class="line number450 index449 alt1">450</div><div class="line number451 index450 alt2">451</div><div class="line number452 index451 alt1">452</div><div class="line number453 index452 alt2">453</div><div class="line number454 index453 alt1">454</div><div class="line number455 index454 alt2">455</div><div class="line number456 index455 alt1">456</div><div class="line number457 index456 alt2">457</div><div class="line number458 index457 alt1">458</div><div class="line number459 index458 alt2">459</div><div class="line number460 index459 alt1">460</div><div class="line number461 index460 alt2">461</div><div class="line number462 index461 alt1">462</div><div class="line number463 index462 alt2">463</div><div class="line number464 index463 alt1">464</div><div class="line number465 index464 alt2">465</div><div class="line number466 index465 alt1">466</div><div class="line number467 index466 alt2">467</div><div class="line number468 index467 alt1">468</div><div class="line number469 index468 alt2">469</div><div class="line number470 index469 alt1">470</div><div class="line number471 index470 alt2">471</div><div class="line number472 index471 alt1">472</div><div class="line number473 index472 alt2">473</div><div class="line number474 index473 alt1">474</div><div class="line number475 index474 alt2">475</div><div class="line number476 index475 alt1">476</div><div class="line number477 index476 alt2">477</div><div class="line number478 index477 alt1">478</div><div class="line number479 index478 alt2">479</div><div class="line number480 index479 alt1">480</div><div class="line number481 index480 alt2">481</div><div class="line number482 index481 alt1">482</div><div class="line number483 index482 alt2">483</div><div class="line number484 index483 alt1">484</div><div class="line number485 index484 alt2">485</div><div class="line number486 index485 alt1">486</div><div class="line number487 index486 alt2">487</div><div class="line number488 index487 alt1">488</div><div class="line number489 index488 alt2">489</div><div class="line number490 index489 alt1">490</div><div class="line number491 index490 alt2">491</div><div class="line number492 index491 alt1">492</div><div class="line number493 index492 alt2">493</div><div class="line number494 index493 alt1">494</div><div class="line number495 index494 alt2">495</div><div class="line number496 index495 alt1">496</div><div class="line number497 index496 alt2">497</div><div class="line number498 index497 alt1">498</div><div class="line number499 index498 alt2">499</div><div class="line number500 index499 alt1">500</div><div class="line number501 index500 alt2">501</div><div class="line number502 index501 alt1">502</div><div class="line number503 index502 alt2">503</div><div class="line number504 index503 alt1">504</div><div class="line number505 index504 alt2">505</div><div class="line number506 index505 alt1">506</div><div class="line number507 index506 alt2">507</div><div class="line number508 index507 alt1">508</div><div class="line number509 index508 alt2">509</div><div class="line number510 index509 alt1">510</div><div class="line number511 index510 alt2">511</div><div class="line number512 index511 alt1">512</div><div class="line number513 index512 alt2">513</div><div class="line number514 index513 alt1">514</div><div class="line number515 index514 alt2">515</div><div class="line number516 index515 alt1">516</div><div class="line number517 index516 alt2">517</div><div class="line number518 index517 alt1">518</div><div class="line number519 index518 alt2">519</div><div class="line number520 index519 alt1">520</div><div class="line number521 index520 alt2">521</div><div class="line number522 index521 alt1">522</div><div class="line number523 index522 alt2">523</div><div class="line number524 index523 alt1">524</div><div class="line number525 index524 alt2">525</div><div class="line number526 index525 alt1">526</div><div class="line number527 index526 alt2">527</div><div class="line number528 index527 alt1">528</div><div class="line number529 index528 alt2">529</div><div class="line number530 index529 alt1">530</div><div class="line number531 index530 alt2">531</div><div class="line number532 index531 alt1">532</div><div class="line number533 index532 alt2">533</div><div class="line number534 index533 alt1">534</div><div class="line number535 index534 alt2">535</div><div class="line number536 index535 alt1">536</div><div class="line number537 index536 alt2">537</div><div class="line number538 index537 alt1">538</div><div class="line number539 index538 alt2">539</div><div class="line number540 index539 alt1">540</div><div class="line number541 index540 alt2">541</div><div class="line number542 index541 alt1">542</div><div class="line number543 index542 alt2">543</div><div class="line number544 index543 alt1">544</div><div class="line number545 index544 alt2">545</div><div class="line number546 index545 alt1">546</div><div class="line number547 index546 alt2">547</div><div class="line number548 index547 alt1">548</div><div class="line number549 index548 alt2">549</div><div class="line number550 index549 alt1">550</div><div class="line number551 index550 alt2">551</div><div class="line number552 index551 alt1">552</div><div class="line number553 index552 alt2">553</div><div class="line number554 index553 alt1">554</div><div class="line number555 index554 alt2">555</div><div class="line number556 index555 alt1">556</div><div class="line number557 index556 alt2">557</div><div class="line number558 index557 alt1">558</div><div class="line number559 index558 alt2">559</div><div class="line number560 index559 alt1">560</div><div class="line number561 index560 alt2">561</div><div class="line number562 index561 alt1">562</div><div class="line number563 index562 alt2">563</div><div class="line number564 index563 alt1">564</div><div class="line number565 index564 alt2">565</div><div class="line number566 index565 alt1">566</div><div class="line number567 index566 alt2">567</div><div class="line number568 index567 alt1">568</div><div class="line number569 index568 alt2">569</div><div class="line number570 index569 alt1">570</div><div class="line number571 index570 alt2">571</div><div class="line number572 index571 alt1">572</div><div class="line number573 index572 alt2">573</div><div class="line number574 index573 alt1">574</div><div class="line number575 index574 alt2">575</div><div class="line number576 index575 alt1">576</div><div class="line number577 index576 alt2">577</div><div class="line number578 index577 alt1">578</div><div class="line number579 index578 alt2">579</div><div class="line number580 index579 alt1">580</div><div class="line number581 index580 alt2">581</div><div class="line number582 index581 alt1">582</div><div class="line number583 index582 alt2">583</div><div class="line number584 index583 alt1">584</div><div class="line number585 index584 alt2">585</div><div class="line number586 index585 alt1">586</div><div class="line number587 index586 alt2">587</div><div class="line number588 index587 alt1">588</div><div class="line number589 index588 alt2">589</div><div class="line number590 index589 alt1">590</div><div class="line number591 index590 alt2">591</div><div class="line number592 index591 alt1">592</div><div class="line number593 index592 alt2">593</div><div class="line number594 index593 alt1">594</div><div class="line number595 index594 alt2">595</div><div class="line number596 index595 alt1">596</div><div class="line number597 index596 alt2">597</div><div class="line number598 index597 alt1">598</div><div class="line number599 index598 alt2">599</div><div class="line number600 index599 alt1">600</div><div class="line number601 index600 alt2">601</div><div class="line number602 index601 alt1">602</div><div class="line number603 index602 alt2">603</div><div class="line number604 index603 alt1">604</div><div class="line number605 index604 alt2">605</div><div class="line number606 index605 alt1">606</div><div class="line number607 index606 alt2">607</div><div class="line number608 index607 alt1">608</div><div class="line number609 index608 alt2">609</div><div class="line number610 index609 alt1">610</div><div class="line number611 index610 alt2">611</div><div class="line number612 index611 alt1">612</div><div class="line number613 index612 alt2">613</div><div class="line number614 index613 alt1">614</div><div class="line number615 index614 alt2">615</div><div class="line number616 index615 alt1">616</div><div class="line number617 index616 alt2">617</div><div class="line number618 index617 alt1">618</div><div class="line number619 index618 alt2">619</div><div class="line number620 index619 alt1">620</div><div class="line number621 index620 alt2">621</div><div class="line number622 index621 alt1">622</div><div class="line number623 index622 alt2">623</div><div class="line number624 index623 alt1">624</div><div class="line number625 index624 alt2">625</div><div class="line number626 index625 alt1">626</div><div class="line number627 index626 alt2">627</div><div class="line number628 index627 alt1">628</div><div class="line number629 index628 alt2">629</div><div class="line number630 index629 alt1">630</div><div class="line number631 index630 alt2">631</div><div class="line number632 index631 alt1">632</div><div class="line number633 index632 alt2">633</div><div class="line number634 index633 alt1">634</div><div class="line number635 index634 alt2">635</div><div class="line number636 index635 alt1">636</div><div class="line number637 index636 alt2">637</div><div class="line number638 index637 alt1">638</div><div class="line number639 index638 alt2">639</div><div class="line number640 index639 alt1">640</div><div class="line number641 index640 alt2">641</div><div class="line number642 index641 alt1">642</div><div class="line number643 index642 alt2">643</div><div class="line number644 index643 alt1">644</div><div class="line number645 index644 alt2">645</div><div class="line number646 index645 alt1">646</div><div class="line number647 index646 alt2">647</div><div class="line number648 index647 alt1">648</div><div class="line number649 index648 alt2">649</div><div class="line number650 index649 alt1">650</div><div class="line number651 index650 alt2">651</div><div class="line number652 index651 alt1">652</div><div class="line number653 index652 alt2">653</div><div class="line number654 index653 alt1">654</div><div class="line number655 index654 alt2">655</div><div class="line number656 index655 alt1">656</div><div class="line number657 index656 alt2">657</div><div class="line number658 index657 alt1">658</div><div class="line number659 index658 alt2">659</div><div class="line number660 index659 alt1">660</div><div class="line number661 index660 alt2">661</div><div class="line number662 index661 alt1">662</div><div class="line number663 index662 alt2">663</div><div class="line number664 index663 alt1">664</div><div class="line number665 index664 alt2">665</div><div class="line number666 index665 alt1">666</div><div class="line number667 index666 alt2">667</div><div class="line number668 index667 alt1">668</div><div class="line number669 index668 alt2">669</div><div class="line number670 index669 alt1">670</div><div class="line number671 index670 alt2">671</div><div class="line number672 index671 alt1">672</div><div class="line number673 index672 alt2">673</div><div class="line number674 index673 alt1">674</div><div class="line number675 index674 alt2">675</div><div class="line number676 index675 alt1">676</div><div class="line number677 index676 alt2">677</div><div class="line number678 index677 alt1">678</div><div class="line number679 index678 alt2">679</div><div class="line number680 index679 alt1">680</div><div class="line number681 index680 alt2">681</div><div class="line number682 index681 alt1">682</div><div class="line number683 index682 alt2">683</div><div class="line number684 index683 alt1">684</div><div class="line number685 index684 alt2">685</div><div class="line number686 index685 alt1">686</div><div class="line number687 index686 alt2">687</div><div class="line number688 index687 alt1">688</div><div class="line number689 index688 alt2">689</div><div class="line number690 index689 alt1">690</div><div class="line number691 index690 alt2">691</div><div class="line number692 index691 alt1">692</div><div class="line number693 index692 alt2">693</div><div class="line number694 index693 alt1">694</div><div class="line number695 index694 alt2">695</div><div class="line number696 index695 alt1">696</div><div class="line number697 index696 alt2">697</div><div class="line number698 index697 alt1">698</div><div class="line number699 index698 alt2">699</div><div class="line number700 index699 alt1">700</div><div class="line number701 index700 alt2">701</div><div class="line number702 index701 alt1">702</div><div class="line number703 index702 alt2">703</div><div class="line number704 index703 alt1">704</div><div class="line number705 index704 alt2">705</div><div class="line number706 index705 alt1">706</div><div class="line number707 index706 alt2">707</div><div class="line number708 index707 alt1">708</div><div class="line number709 index708 alt2">709</div><div class="line number710 index709 alt1">710</div><div class="line number711 index710 alt2">711</div><div class="line number712 index711 alt1">712</div><div class="line number713 index712 alt2">713</div><div class="line number714 index713 alt1">714</div><div class="line number715 index714 alt2">715</div><div class="line number716 index715 alt1">716</div><div class="line number717 index716 alt2">717</div><div class="line number718 index717 alt1">718</div><div class="line number719 index718 alt2">719</div><div class="line number720 index719 alt1">720</div><div class="line number721 index720 alt2">721</div><div class="line number722 index721 alt1">722</div><div class="line number723 index722 alt2">723</div><div class="line number724 index723 alt1">724</div><div class="line number725 index724 alt2">725</div><div class="line number726 index725 alt1">726</div><div class="line number727 index726 alt2">727</div><div class="line number728 index727 alt1">728</div><div class="line number729 index728 alt2">729</div><div class="line number730 index729 alt1">730</div><div class="line number731 index730 alt2">731</div><div class="line number732 index731 alt1">732</div><div class="line number733 index732 alt2">733</div><div class="line number734 index733 alt1">734</div><div class="line number735 index734 alt2">735</div><div class="line number736 index735 alt1">736</div><div class="line number737 index736 alt2">737</div><div class="line number738 index737 alt1">738</div><div class="line number739 index738 alt2">739</div><div class="line number740 index739 alt1">740</div><div class="line number741 index740 alt2">741</div><div class="line number742 index741 alt1">742</div><div class="line number743 index742 alt2">743</div><div class="line number744 index743 alt1">744</div><div class="line number745 index744 alt2">745</div><div class="line number746 index745 alt1">746</div><div class="line number747 index746 alt2">747</div><div class="line number748 index747 alt1">748</div><div class="line number749 index748 alt2">749</div><div class="line number750 index749 alt1">750</div><div class="line number751 index750 alt2">751</div><div class="line number752 index751 alt1">752</div><div class="line number753 index752 alt2">753</div><div class="line number754 index753 alt1">754</div><div class="line number755 index754 alt2">755</div><div class="line number756 index755 alt1">756</div><div class="line number757 index756 alt2">757</div><div class="line number758 index757 alt1">758</div><div class="line number759 index758 alt2">759</div><div class="line number760 index759 alt1">760</div><div class="line number761 index760 alt2">761</div><div class="line number762 index761 alt1">762</div><div class="line number763 index762 alt2">763</div><div class="line number764 index763 alt1">764</div><div class="line number765 index764 alt2">765</div><div class="line number766 index765 alt1">766</div><div class="line number767 index766 alt2">767</div><div class="line number768 index767 alt1">768</div><div class="line number769 index768 alt2">769</div><div class="line number770 index769 alt1">770</div><div class="line number771 index770 alt2">771</div><div class="line number772 index771 alt1">772</div><div class="line number773 index772 alt2">773</div><div class="line number774 index773 alt1">774</div><div class="line number775 index774 alt2">775</div><div class="line number776 index775 alt1">776</div><div class="line number777 index776 alt2">777</div><div class="line number778 index777 alt1">778</div><div class="line number779 index778 alt2">779</div><div class="line number780 index779 alt1">780</div><div class="line number781 index780 alt2">781</div><div class="line number782 index781 alt1">782</div><div class="line number783 index782 alt2">783</div><div class="line number784 index783 alt1">784</div><div class="line number785 index784 alt2">785</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* linux/drivers/input/touchscreen/s3c-ts.c</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* This program is free software; you can redistribute it and/or modify</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* it under the terms of the GNU General Public License as published by</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* the Free Software Foundation; either version 2 of the License, or</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* (at your option) any later version.</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* This program is distributed in the hope that it will be useful,</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* but WITHOUT ANY WARRANTY; without even the implied warranty of</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp; See the</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* GNU General Public License for more details.</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* You should have received a copy of the GNU General Public License</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* along with this program; if not, write to the Free Software</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* a misc driver for mini6410 touch screen</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp; by FriendlyARM 2010</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* Based on following software:</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">** Copyright (c) 2004 Arnaud Patard &lt;arnaud.patard@rtp-net.org&gt;</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">** iPAQ H1940 touchscreen support</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">** ChangeLog</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">** 2004-09-05: Herbert Potzl &lt;herbert@13thfloor.at&gt;</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">** - added clock (de-)allocation code</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">** 2005-03-06: Arnaud Patard &lt;arnaud.patard@rtp-net.org&gt;</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - h1940_ -&gt; s3c24xx (this driver is now also used on the n30</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; machines :P)</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Debug messages are now enabled with the config option</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TOUCHSCREEN_S3C_DEBUG</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Changed the way the value are read</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Input subsystem should now work</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Use ioremap and readl/writel</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**</code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">** 2005-03-23: Arnaud Patard &lt;arnaud.patard@rtp-net.org&gt;</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Make use of some undocumented features of the touchscreen</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; controller</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">** 2006-09-05: Ryu Euiyoul &lt;ryu.real@gmail.com&gt;</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - added power management suspend and resume code</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number47 index46 alt2">&nbsp;</div><div class="line number48 index47 alt1"><code class="cpp preprocessor">#include &lt;linux/errno.h&gt;</code></div><div class="line number49 index48 alt2"><code class="cpp preprocessor">#include &lt;linux/kernel.h&gt;</code></div><div class="line number50 index49 alt1"><code class="cpp preprocessor">#include &lt;linux/module.h&gt;</code></div><div class="line number51 index50 alt2"><code class="cpp preprocessor">#include &lt;linux/slab.h&gt;</code></div><div class="line number52 index51 alt1"><code class="cpp preprocessor">#include &lt;linux/input.h&gt;</code></div><div class="line number53 index52 alt2"><code class="cpp preprocessor">#include &lt;linux/init.h&gt;</code></div><div class="line number54 index53 alt1"><code class="cpp preprocessor">#include &lt;linux/serio.h&gt;</code></div><div class="line number55 index54 alt2"><code class="cpp preprocessor">#include &lt;linux/delay.h&gt;</code></div><div class="line number56 index55 alt1"><code class="cpp preprocessor">#include &lt;linux/platform_device.h&gt;</code></div><div class="line number57 index56 alt2"><code class="cpp preprocessor">#include &lt;linux/clk.h&gt;</code></div><div class="line number58 index57 alt1"><code class="cpp preprocessor">#include &lt;linux/fs.h&gt;</code></div><div class="line number59 index58 alt2"><code class="cpp preprocessor">#include &lt;linux/poll.h&gt;</code></div><div class="line number60 index59 alt1"><code class="cpp preprocessor">#include &lt;linux/irq.h&gt;</code></div><div class="line number61 index60 alt2"><code class="cpp preprocessor">#include &lt;linux/interrupt.h&gt;</code></div><div class="line number62 index61 alt1"><code class="cpp preprocessor">#include &lt;linux/cdev.h&gt;</code></div><div class="line number63 index62 alt2"><code class="cpp preprocessor">#include &lt;linux/miscdevice.h&gt;</code></div><div class="line number64 index63 alt1">&nbsp;</div><div class="line number65 index64 alt2"><code class="cpp preprocessor">#include &lt;asm/uaccess.h&gt;</code></div><div class="line number66 index65 alt1"><code class="cpp preprocessor">#include &lt;asm/io.h&gt;</code></div><div class="line number67 index66 alt2"><code class="cpp preprocessor">#include &lt;asm/irq.h&gt;</code></div><div class="line number68 index67 alt1"><code class="cpp preprocessor">#include &lt;mach/hardware.h&gt;</code></div><div class="line number69 index68 alt2">&nbsp;</div><div class="line number70 index69 alt1"><code class="cpp preprocessor">#include &lt;plat/regs-adc.h&gt;</code></div><div class="line number71 index70 alt2"><code class="cpp preprocessor">#include &lt;mach/irqs.h&gt;</code></div><div class="line number72 index71 alt1"><code class="cpp preprocessor">#include &lt;mach/map.h&gt;</code></div><div class="line number73 index72 alt2"><code class="cpp preprocessor">#include &lt;mach/regs-clock.h&gt;</code></div><div class="line number74 index73 alt1"><code class="cpp preprocessor">#include &lt;mach/regs-gpio.h&gt;</code></div><div class="line number75 index74 alt2"><code class="cpp preprocessor">#include &lt;mach/gpio-bank-a.h&gt;</code></div><div class="line number76 index75 alt1"><code class="cpp preprocessor">#include &lt;mach/ts.h&gt;</code></div><div class="line number77 index76 alt2">&nbsp;</div><div class="line number78 index77 alt1"><code class="cpp preprocessor">#define CONFIG_TOUCHSCREEN_S3C_DEBUG</code></div><div class="line number79 index78 alt2"><code class="cpp preprocessor">#undef CONFIG_TOUCHSCREEN_S3C_DEBUG</code></div><div class="line number80 index79 alt1"><code class="cpp preprocessor">#define DEBUG_LVL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; KERN_DEBUG</code></div><div class="line number81 index80 alt2">&nbsp;</div><div class="line number82 index81 alt1">&nbsp;</div><div class="line number83 index82 alt2"><code class="cpp preprocessor">#ifdef CONFIG_MINI6410_ADC</code></div><div class="line number84 index83 alt1"><code class="cpp plain">DEFINE_SEMAPHORE(ADC_LOCK);&nbsp; </code><code class="cpp comments">//定义并初始化了一个信号量</code></div><div class="line number85 index84 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//37内核就没有DECLARE_MUTEX了吧，功能应该是一样的</code></div><div class="line number86 index85 alt1">&nbsp;</div><div class="line number87 index86 alt2">&nbsp;</div><div class="line number88 index87 alt1"><code class="cpp comments">/* Indicate who is using the ADC controller */</code></div><div class="line number89 index88 alt2"><code class="cpp comments">//ADC的状态，防止触摸屏转换时，ADC正在被使用</code></div><div class="line number90 index89 alt1"><code class="cpp preprocessor">#define LOCK_FREE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0</code></div><div class="line number91 index90 alt2"><code class="cpp preprocessor">#define LOCK_TS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1</code></div><div class="line number92 index91 alt1"><code class="cpp preprocessor">#define LOCK_ADC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</code></div><div class="line number93 index92 alt2"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">adc_lock_id = LOCK_FREE;</code></div><div class="line number94 index93 alt1">&nbsp;</div><div class="line number95 index94 alt2"><code class="cpp preprocessor">#define ADC_free()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (adc_lock_id == LOCK_FREE)&nbsp; </code></div><div class="line number96 index95 alt1"><code class="cpp preprocessor">#define ADC_locked4TS() (adc_lock_id == LOCK_TS)</code></div><div class="line number97 index96 alt2">&nbsp;</div><div class="line number98 index97 alt1"><code class="cpp comments">//==</code></div><div class="line number99 index98 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">s3c_ts_adc_lock(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">id) {</code></div><div class="line number100 index99 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">ret;</code></div><div class="line number101 index100 alt2">&nbsp;</div><div class="line number102 index101 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = down_trylock(&amp;ADC_LOCK); </code><code class="cpp comments">//获取自旋锁</code></div><div class="line number103 index102 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!ret) {</code></div><div class="line number104 index103 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">adc_lock_id = id;</code></div><div class="line number105 index104 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number106 index105 alt1">&nbsp;</div><div class="line number107 index106 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">ret;&nbsp; </code><code class="cpp comments">//返回状态&nbsp; 1:失败&nbsp; 0：成功</code></div><div class="line number108 index107 alt1"><code class="cpp plain">}</code></div><div class="line number109 index108 alt2"><code class="cpp comments">//--</code></div><div class="line number110 index109 alt1">&nbsp;</div><div class="line number111 index110 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">s3c_ts_adc_unlock(</code><code class="cpp keyword bold">void</code><code class="cpp plain">) {</code></div><div class="line number112 index111 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">adc_lock_id = 0;</code></div><div class="line number113 index112 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">up(&amp;ADC_LOCK);&nbsp; </code><code class="cpp comments">//释放自旋锁</code></div><div class="line number114 index113 alt1"><code class="cpp plain">}</code></div><div class="line number115 index114 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number116 index115 alt1">&nbsp;</div><div class="line number117 index116 alt2">&nbsp;</div><div class="line number118 index117 alt1"><code class="cpp comments">/* Touchscreen default configuration */</code></div><div class="line number119 index118 alt2"><code class="cpp keyword bold">struct</code> <code class="cpp plain">s3c_ts_mach_info s3c_ts_default_cfg __initdata = {</code></div><div class="line number120 index119 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.delay&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 10000,&nbsp; </code><code class="cpp comments">//转换延时</code></div><div class="line number121 index120 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.presc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 49,&nbsp; </code><code class="cpp comments">//转换时钟分频</code></div><div class="line number122 index121 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.oversampling_shift = 2,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">//转换次数&nbsp; 4次</code></div><div class="line number123 index122 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.resol_bit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 12, </code><code class="cpp comments">//转换精度</code></div><div class="line number124 index123 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.s3c_adc_con&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = ADC_TYPE_2&nbsp;&nbsp; </code><code class="cpp comments">//6410是type2</code></div><div class="line number125 index124 alt2"><code class="cpp plain">};</code></div><div class="line number126 index125 alt1"><code class="cpp comments">/*</code></div><div class="line number127 index126 alt2"><code class="cpp comments">struct s3c_ts_mach_info s3c_ts_default_cfg __initdata = {</code></div><div class="line number128 index127 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">.delay&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 10000,</code></div><div class="line number129 index128 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">.presc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 49,</code></div><div class="line number130 index129 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">.oversampling_shift = 2,</code></div><div class="line number131 index130 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">.resol_bit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 10</code></div><div class="line number132 index131 alt1"><code class="cpp comments">};</code></div><div class="line number133 index132 alt2"><code class="cpp comments">*/</code></div><div class="line number134 index133 alt1"><code class="cpp comments">/*</code></div><div class="line number135 index134 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* Definitions &amp; global arrays.</code></div><div class="line number136 index135 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number137 index136 alt2"><code class="cpp preprocessor">#define DEVICE_NAME&nbsp;&nbsp;&nbsp;&nbsp; "touchscreen"</code></div><div class="line number138 index137 alt1"><code class="cpp keyword bold">static</code> <code class="cpp plain">DECLARE_WAIT_QUEUE_HEAD(ts_waitq); </code><code class="cpp comments">//定义并初始化一个等待队列</code></div><div class="line number139 index138 alt2">&nbsp;</div><div class="line number140 index139 alt1"><code class="cpp keyword bold">typedef</code> <code class="cpp plain">unsigned&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TS_EVENT;</code></div><div class="line number141 index140 alt2"><code class="cpp preprocessor">#define NR_EVENTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 64&nbsp;&nbsp;&nbsp;&nbsp; //触摸屏fifo大小</code></div><div class="line number142 index141 alt1">&nbsp;</div><div class="line number143 index142 alt2"><code class="cpp keyword bold">static</code> <code class="cpp plain">TS_EVENT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; events[NR_EVENTS];</code></div><div class="line number144 index143 alt1"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code class="cpp plain">evt_head, evt_tail; </code><code class="cpp comments">//fifo的头的尾</code></div><div class="line number145 index144 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//驱动写fifo时evt_head++，应用读fifo时 evt_tail++</code></div><div class="line number146 index145 alt1">&nbsp;</div><div class="line number147 index146 alt2"><code class="cpp preprocessor">#define ts_evt_pending()&nbsp;&nbsp;&nbsp; ((volatile u8)(evt_head != evt_tail))&nbsp;&nbsp; //相等就表示满了</code></div><div class="line number148 index147 alt1"><code class="cpp preprocessor">#define ts_evt_get()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (events + evt_tail)</code></div><div class="line number149 index148 alt2"><code class="cpp preprocessor">#define ts_evt_pull()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (evt_tail = (evt_tail + 1) &amp; (NR_EVENTS - 1))</code></div><div class="line number150 index149 alt1"><code class="cpp preprocessor">#define ts_evt_clear()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (evt_head = evt_tail = 0)</code></div><div class="line number151 index150 alt2">&nbsp;</div><div class="line number152 index151 alt1"><code class="cpp comments">//将AD转换的值放入FIFO</code></div><div class="line number153 index152 alt2"><code class="cpp comments">//这里是一个先进先出的fifo</code></div><div class="line number154 index153 alt1"><code class="cpp comments">//只要有数据被添加进来，就会唤醒ts_waitq进程</code></div><div class="line number155 index154 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">ts_evt_add(unsigned x, unsigned y, unsigned down) {</code></div><div class="line number156 index155 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">unsigned ts_event;</code></div><div class="line number157 index156 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">next_head;</code></div><div class="line number158 index157 alt1">&nbsp;</div><div class="line number159 index158 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_event = ((x &lt;&lt; 16) | (y)) | (down &lt;&lt; 31);</code></div><div class="line number160 index159 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">next_head = (evt_head + 1) &amp; (NR_EVENTS - 1);</code></div><div class="line number161 index160 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//没满就装入</code></div><div class="line number162 index161 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(next_head != evt_tail) {</code></div><div class="line number163 index162 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">events[evt_head] = ts_event;</code></div><div class="line number164 index163 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">evt_head = next_head;</code></div><div class="line number165 index164 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//printk("====&gt;Add ... [ %4d,&nbsp; %4d ]%s\n", x, y, down ? "":" ~~~");</code></div><div class="line number166 index165 alt1">&nbsp;</div><div class="line number167 index166 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* wake up any read call */</code></div><div class="line number168 index167 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(waitqueue_active(&amp;ts_waitq)) { </code><code class="cpp comments">//判斷等待隊列是否有進程睡眠</code></div><div class="line number169 index168 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">wake_up_interruptible(&amp;ts_waitq);&nbsp; </code><code class="cpp comments">//唤醒ts_waitq等待队列中所有interruptible类型的进程</code></div><div class="line number170 index169 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number171 index170 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div><div class="line number172 index171 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* drop the event and try to wakeup readers */</code></div><div class="line number173 index172 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printk(KERN_WARNING </code><code class="cpp string">"mini6410-ts: touch event buffer full"</code><code class="cpp plain">);</code></div><div class="line number174 index173 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">wake_up_interruptible(&amp;ts_waitq);</code></div><div class="line number175 index174 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number176 index175 alt1"><code class="cpp plain">}</code></div><div class="line number177 index176 alt2">&nbsp;</div><div class="line number178 index177 alt1"><code class="cpp keyword bold">static</code> <code class="cpp plain">unsigned </code><code class="cpp color1 bold">int</code> <code class="cpp plain">s3c_ts_poll( </code><code class="cpp keyword bold">struct</code> <code class="cpp plain">file *file, </code><code class="cpp keyword bold">struct</code> <code class="cpp plain">poll_table_struct *wait)</code></div><div class="line number179 index178 alt2"><code class="cpp plain">{</code></div><div class="line number180 index179 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">unsigned </code><code class="cpp color1 bold">int</code> <code class="cpp plain">mask = 0;</code></div><div class="line number181 index180 alt2">&nbsp;</div><div class="line number182 index181 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//将ts_waitq等待队列添加到poll_table里去</code></div><div class="line number183 index182 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">poll_wait(file, &amp;ts_waitq, wait); </code></div><div class="line number184 index183 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//返回掩码&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div><div class="line number185 index184 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts_evt_pending())</code></div><div class="line number186 index185 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mask |= POLLIN | POLLRDNORM;&nbsp; </code><code class="cpp comments">//返回设备可读</code></div><div class="line number187 index186 alt2">&nbsp;</div><div class="line number188 index187 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">mask;</code></div><div class="line number189 index188 alt2"><code class="cpp plain">}</code></div><div class="line number190 index189 alt1">&nbsp;</div><div class="line number191 index190 alt2"><code class="cpp comments">//读 系统调用==</code></div><div class="line number192 index191 alt1"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">s3c_ts_read(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">file *filp, </code><code class="cpp color1 bold">char</code> <code class="cpp plain">__user *buff, </code><code class="cpp color1 bold">size_t</code> <code class="cpp plain">count, loff_t *offp)</code></div><div class="line number193 index192 alt2"><code class="cpp plain">{</code></div><div class="line number194 index193 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">DECLARE_WAITQUEUE(wait, current); </code><code class="cpp comments">//把当前进程加到定义的等待队列头wait中 </code></div><div class="line number195 index194 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*ptr = buff;</code></div><div class="line number196 index195 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">err = 0;</code></div><div class="line number197 index196 alt2">&nbsp;</div><div class="line number198 index197 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">add_wait_queue(&amp;ts_waitq, &amp;wait); </code><code class="cpp comments">//把wait入到等待队列头中。该队列会在进程等待的条件满足时唤醒它。</code></div><div class="line number199 index198 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//我们必须在其他地方写相关代码，在事件发生时，对等的队列执行wake_up()操作。</code></div><div class="line number200 index199 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//这里是在ts_evt_add里wake_up</code></div><div class="line number201 index200 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code> <code class="cpp plain">(count &gt;= </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(TS_EVENT)) {</code></div><div class="line number202 index201 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">err = -ERESTARTSYS;</code></div><div class="line number203 index202 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(signal_pending(current)) </code><code class="cpp comments">//如果是信号唤醒&nbsp;&nbsp;&nbsp; 参考<a href="http://www.360doc.com/content/10/1009/17/1317564_59632874.shtml">http://www.360doc.com/content/10/1009/17/1317564_59632874.shtml</a></code></div><div class="line number204 index203 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number205 index204 alt2">&nbsp;</div><div class="line number206 index205 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts_evt_pending()) {</code></div><div class="line number207 index206 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">TS_EVENT *evt = ts_evt_get();</code></div><div class="line number208 index207 alt1">&nbsp;</div><div class="line number209 index208 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">err = copy_to_user(ptr, evt, </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(TS_EVENT));</code></div><div class="line number210 index209 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_evt_pull();</code></div><div class="line number211 index210 alt2">&nbsp;</div><div class="line number212 index211 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(err)</code></div><div class="line number213 index212 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number214 index213 alt1">&nbsp;</div><div class="line number215 index214 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ptr += </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(TS_EVENT);</code></div><div class="line number216 index215 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">count -= </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(TS_EVENT);</code></div><div class="line number217 index216 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">continue</code><code class="cpp plain">;</code></div><div class="line number218 index217 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number219 index218 alt2">&nbsp;</div><div class="line number220 index219 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">set_current_state(TASK_INTERRUPTIBLE); </code><code class="cpp comments">//改变进程状态为可中断的睡眠</code></div><div class="line number221 index220 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">err = -EAGAIN;</code></div><div class="line number222 index221 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(filp-&gt;f_flags &amp; O_NONBLOCK) </code><code class="cpp comments">//如果上层调用是非阻塞方式，则不阻塞该进程，直接返回EAGAIN</code></div><div class="line number223 index222 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number224 index223 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">schedule();&nbsp; </code><code class="cpp comments">//本进程在此处交出CPU控制权，等待被唤醒</code></div><div class="line number225 index224 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//进程调度的意思侧重于把当前任务从CPU拿掉，再从就绪队列中按照调度算法取一就绪进程占用CPU</code></div><div class="line number226 index225 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number227 index226 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">current-&gt;state = TASK_RUNNING;</code></div><div class="line number228 index227 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">remove_wait_queue(&amp;ts_waitq, &amp;wait);</code></div><div class="line number229 index228 alt2">&nbsp;</div><div class="line number230 index229 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">ptr == buff ? err : ptr - buff;</code></div><div class="line number231 index230 alt2"><code class="cpp plain">}</code></div><div class="line number232 index231 alt1"><code class="cpp comments">//--</code></div><div class="line number233 index232 alt2">&nbsp;</div><div class="line number234 index233 alt1"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">s3c_ts_open(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">inode *inode, </code><code class="cpp keyword bold">struct</code> <code class="cpp plain">file *filp) {</code></div><div class="line number235 index234 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* flush event queue */</code></div><div class="line number236 index235 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_evt_clear();</code></div><div class="line number237 index236 alt2">&nbsp;</div><div class="line number238 index237 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number239 index238 alt2"><code class="cpp plain">}</code></div><div class="line number240 index239 alt1">&nbsp;</div><div class="line number241 index240 alt2"><code class="cpp comments">//当应用程序操作设备文件时调用的open read等函数，最终会调用这个结构体中对应的函数</code></div><div class="line number242 index241 alt1"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">struct</code> <code class="cpp plain">file_operations dev_fops = {</code></div><div class="line number243 index242 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.owner&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = THIS_MODULE,</code></div><div class="line number244 index243 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.read&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = s3c_ts_read,</code></div><div class="line number245 index244 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.poll&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = s3c_ts_poll,&nbsp; </code><code class="cpp comments">//select系统调用</code></div><div class="line number246 index245 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.open&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = s3c_ts_open,</code></div><div class="line number247 index246 alt2"><code class="cpp plain">};</code></div><div class="line number248 index247 alt1">&nbsp;</div><div class="line number249 index248 alt2"><code class="cpp comments">//设备号，设备名，注册的时候用到这个数组</code></div><div class="line number250 index249 alt1"><code class="cpp comments">//混杂设备主设备号为10</code></div><div class="line number251 index250 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">struct</code> <code class="cpp plain">miscdevice misc = {</code></div><div class="line number252 index251 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.minor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = MISC_DYNAMIC_MINOR, </code><code class="cpp comments">//自动分配次设置号</code></div><div class="line number253 index252 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//.minor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 180, </code></div><div class="line number254 index253 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = DEVICE_NAME,</code></div><div class="line number255 index254 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.fops&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &amp;dev_fops,</code></div><div class="line number256 index255 alt1"><code class="cpp plain">};</code></div><div class="line number257 index256 alt2">&nbsp;</div><div class="line number258 index257 alt1"><code class="cpp comments">//x为0时为等待按下中断，x为1是为等待抬起中断</code></div><div class="line number259 index258 alt2"><code class="cpp preprocessor">#define WAIT4INT(x)&nbsp;&nbsp;&nbsp;&nbsp; (((x) &lt;&lt; 8) | \</code></div><div class="line number260 index259 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">S3C_ADCTSC_YM_SEN | S3C_ADCTSC_YP_SEN | S3C_ADCTSC_XP_SEN | \</code></div><div class="line number261 index260 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">S3C_ADCTSC_XY_PST(3))</code></div><div class="line number262 index261 alt1">&nbsp;</div><div class="line number263 index262 alt2"><code class="cpp comments">//自动连续测量X坐标和Y坐标</code></div><div class="line number264 index263 alt1"><code class="cpp preprocessor">#define AUTOPST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (S3C_ADCTSC_YM_SEN | S3C_ADCTSC_YP_SEN | S3C_ADCTSC_XP_SEN | \</code></div><div class="line number265 index264 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">S3C_ADCTSC_AUTO_PST | S3C_ADCTSC_XY_PST(0))</code></div><div class="line number266 index265 alt1">&nbsp;</div><div class="line number267 index266 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">__iomem&nbsp;&nbsp;&nbsp;&nbsp; *ts_base;</code></div><div class="line number268 index267 alt1"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">struct</code> <code class="cpp plain">resource&nbsp; *ts_mem;</code></div><div class="line number269 index268 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">struct</code> <code class="cpp plain">resource&nbsp; *ts_irq;</code></div><div class="line number270 index269 alt1"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">struct</code> <code class="cpp plain">clk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *ts_clock;</code></div><div class="line number271 index270 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">struct</code> <code class="cpp plain">s3c_ts_info&nbsp;&nbsp; *ts;</code></div><div class="line number272 index271 alt1">&nbsp;</div><div class="line number273 index272 alt2"><code class="cpp comments">/**</code></div><div class="line number274 index273 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* get_down - return the down state of the pen</code></div><div class="line number275 index274 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* @data0: The data read from ADCDAT0 register.</code></div><div class="line number276 index275 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* @data1: The data read from ADCDAT1 register.</code></div><div class="line number277 index276 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number278 index277 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* Return non-zero if both readings show that the pen is down.</code></div><div class="line number279 index278 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number280 index279 alt1"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">get_down(unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data0, unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data1)</code></div><div class="line number281 index280 alt2"><code class="cpp plain">{</code></div><div class="line number282 index281 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* returns true if both data values show stylus down */</code></div><div class="line number283 index282 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">(!(data0 &amp; S3C_ADCDAT0_UPDOWN) &amp;&amp; !(data1 &amp; S3C_ADCDAT1_UPDOWN)); </code><code class="cpp comments">//判断data0,data1最高位是否仍为"0"，为“0”表示触摸笔状态保持为down</code></div><div class="line number284 index283 alt1"><code class="cpp plain">}</code></div><div class="line number285 index284 alt2">&nbsp;</div><div class="line number286 index285 alt1">&nbsp;</div><div class="line number287 index286 alt2"><code class="cpp comments">/*===========================================================================================</code></div><div class="line number288 index287 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">touch_timer_fire这个函数主要实现以下功能：</code></div><div class="line number289 index288 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number290 index289 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">1、&nbsp; 触摸笔开始点击的时候， 在中断函数stylus_updown里面被调用，</code></div><div class="line number291 index290 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">此时缓存区没有数据，ts.count为0,&nbsp;&nbsp; 并且开启AD转换,而后进入 AD 中断</code></div><div class="line number292 index291 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number293 index292 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">2、&nbsp; ADC中断函数stylus_action把缓冲区填满的时候，作为中断后半段函数稍后被调用（由内核定时器触发中断），</code></div><div class="line number294 index293 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">此时ts.count为4，算出其平均值后，交给事件处理层(Event Handler)处理，</code></div><div class="line number295 index294 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">主要是填写缓冲，然后唤醒等待输入数据的进程。</code></div><div class="line number296 index295 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number297 index296 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">3、&nbsp; stylus抬起，等到缓冲区填满后(可能会包含一些无用的数据)被调用，</code></div><div class="line number298 index297 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">这时候判断出stylus up，报告stylus up事件，重新等待stylus down。</code></div><div class="line number299 index298 alt2"><code class="cpp comments">============================================================================================*/</code></div><div class="line number300 index299 alt1">&nbsp;</div><div class="line number301 index300 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">touch_timer_fire(unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data) {</code></div><div class="line number302 index301 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data0;</code></div><div class="line number303 index302 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data1;</code></div><div class="line number304 index303 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">pendown;</code></div><div class="line number305 index304 alt2">&nbsp;</div><div class="line number306 index305 alt1"><code class="cpp preprocessor">#ifdef CONFIG_MINI6410_ADC</code></div><div class="line number307 index306 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!ADC_locked4TS()) {</code></div><div class="line number308 index307 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* Note: pen UP interrupt detected and handled, the lock is released,</code></div><div class="line number309 index308 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* so do nothing in the timer which started by ADC ISR. */</code></div><div class="line number310 index309 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number311 index310 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number312 index311 alt1"><code class="cpp preprocessor">#endif</code></div><div class="line number313 index312 alt2">&nbsp;</div><div class="line number314 index313 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">data0 = readl(ts_base + S3C_ADCDAT0);</code></div><div class="line number315 index314 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">data1 = readl(ts_base + S3C_ADCDAT1);</code><code class="cpp comments">//读取AD转换数据的值</code></div><div class="line number316 index315 alt1">&nbsp;</div><div class="line number317 index316 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">pendown = get_down(data0, data1);</code></div><div class="line number318 index317 alt1">&nbsp;</div><div class="line number319 index318 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(pendown) {</code></div><div class="line number320 index319 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts-&gt;count == (1 &lt;&lt; ts-&gt;shift)) {&nbsp; </code><code class="cpp comments">//定时器触发touch_timer_fire中断时执行这个括号里</code></div><div class="line number321 index320 alt2"><code class="cpp preprocessor">#ifdef CONFIG_TOUCHSCREEN_S3C_DEBUG</code></div><div class="line number322 index321 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number323 index322 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">timeval tv;</code></div><div class="line number324 index323 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">do_gettimeofday(&amp;tv);</code></div><div class="line number325 index324 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printk(KERN_INFO </code><code class="cpp string">"T: %06d, X: %03ld, Y: %03ld\n"</code><code class="cpp plain">,</code></div><div class="line number326 index325 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code><code class="cpp plain">)tv.tv_usec, ts-&gt;xp, ts-&gt;yp);</code></div><div class="line number327 index326 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number328 index327 alt1"><code class="cpp preprocessor">#endif</code></div><div class="line number329 index328 alt2">&nbsp;</div><div class="line number330 index329 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_evt_add((ts-&gt;xp &gt;&gt; ts-&gt;shift), (ts-&gt;yp &gt;&gt; ts-&gt;shift), 1);</code><code class="cpp comments">//求平均，并写入fifo</code></div><div class="line number331 index330 alt2">&nbsp;</div><div class="line number332 index331 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;xp = 0;</code></div><div class="line number333 index332 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;yp = 0;</code></div><div class="line number334 index333 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;count = 0;</code></div><div class="line number335 index334 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number336 index335 alt1">&nbsp;</div><div class="line number337 index336 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* start automatic sequencing A/D conversion */</code></div><div class="line number338 index337 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//每次按下有四次AD转换，以下为在按下中断中触发的第一次AD转换，其余三次在AD转换中断处理函数中触发</code></div><div class="line number339 index338 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//AUTOPST表示自动连续测量 以得到X位置，Y位置</code></div><div class="line number340 index339 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(S3C_ADCTSC_PULL_UP_DISABLE | AUTOPST, ts_base + S3C_ADCTSC);</code></div><div class="line number341 index340 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// 启动D转换，转换后会产生中断IRQ_ADC</code></div><div class="line number342 index341 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(readl(ts_base + S3C_ADCCON) | S3C_ADCCON_ENABLE_START,</code></div><div class="line number343 index342 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_base + S3C_ADCCON);</code></div><div class="line number344 index343 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number345 index344 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{&nbsp; </code><code class="cpp comments">//如果是松开，报告其触摸笔状态</code></div><div class="line number346 index345 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;xp = 0;</code></div><div class="line number347 index346 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;yp = 0;</code></div><div class="line number348 index347 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;count = 0;</code></div><div class="line number349 index348 alt2">&nbsp;</div><div class="line number350 index349 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_evt_add(0, 0, 0);</code></div><div class="line number351 index350 alt2">&nbsp;</div><div class="line number352 index351 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* PEN is UP, Let's wait the PEN DOWN interrupt */</code></div><div class="line number353 index352 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(WAIT4INT(0), ts_base + S3C_ADCTSC);&nbsp; </code><code class="cpp comments">// 设置INT 位，等待 DOWN 中断</code></div><div class="line number354 index353 alt1">&nbsp;</div><div class="line number355 index354 alt2"><code class="cpp preprocessor">#ifdef CONFIG_MINI6410_ADC</code></div><div class="line number356 index355 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ADC_locked4TS()) {</code></div><div class="line number357 index356 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s3c_ts_adc_unlock();</code></div><div class="line number358 index357 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number359 index358 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number360 index359 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number361 index360 alt2"><code class="cpp plain">}</code></div><div class="line number362 index361 alt1">&nbsp;</div><div class="line number363 index362 alt2"><code class="cpp keyword bold">static</code> <code class="cpp plain">DEFINE_TIMER(touch_timer, touch_timer_fire, 0, 0);</code></div><div class="line number364 index363 alt1">&nbsp;</div><div class="line number365 index364 alt2"><code class="cpp comments">//触摸屏按下松开中断服务==</code></div><div class="line number366 index365 alt1"><code class="cpp keyword bold">static</code> <code class="cpp plain">irqreturn_t stylus_updown(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">irqno, </code><code class="cpp keyword bold">void</code> <code class="cpp plain">*param)</code></div><div class="line number367 index366 alt2"><code class="cpp plain">{</code></div><div class="line number368 index367 alt1"><code class="cpp preprocessor">#ifdef CONFIG_TOUCHSCREEN_S3C_DEBUG</code></div><div class="line number369 index368 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data0;</code></div><div class="line number370 index369 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data1;</code></div><div class="line number371 index370 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">is_waiting_up;</code></div><div class="line number372 index371 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">pendown;</code></div><div class="line number373 index372 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number374 index373 alt1">&nbsp;</div><div class="line number375 index374 alt2"><code class="cpp preprocessor">#ifdef CONFIG_MINI6410_ADC</code></div><div class="line number376 index375 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!ADC_locked4TS()) {</code></div><div class="line number377 index376 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(s3c_ts_adc_lock(LOCK_TS)) {</code></div><div class="line number378 index377 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* Locking ADC controller failed */</code></div><div class="line number379 index378 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printk(</code><code class="cpp string">"Lock ADC failed, %d\n"</code><code class="cpp plain">, adc_lock_id);</code></div><div class="line number380 index379 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">IRQ_HANDLED;</code></div><div class="line number381 index380 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number382 index381 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number383 index382 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number384 index383 alt1">&nbsp;</div><div class="line number385 index384 alt2"><code class="cpp preprocessor">#ifdef CONFIG_TOUCHSCREEN_S3C_DEBUG</code></div><div class="line number386 index385 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">data0 = readl(ts_base + S3C_ADCDAT0);</code></div><div class="line number387 index386 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">data1 = readl(ts_base + S3C_ADCDAT1);</code></div><div class="line number388 index387 alt1">&nbsp;</div><div class="line number389 index388 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">is_waiting_up = readl(ts_base + S3C_ADCTSC) &amp; (1 &lt;&lt; 8);</code></div><div class="line number390 index389 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">pendown = get_down(data0, data1);</code></div><div class="line number391 index390 alt2">&nbsp;</div><div class="line number392 index391 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printk(</code><code class="cpp string">"P: %d &lt;--&gt; %c\n"</code><code class="cpp plain">, pendown, is_waiting_up ? </code><code class="cpp string">'u'</code><code class="cpp plain">:</code><code class="cpp string">'d'</code><code class="cpp plain">);</code></div><div class="line number393 index392 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number394 index393 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//执行如下语句否则不断产生中断从而把系统卡死</code></div><div class="line number395 index394 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts-&gt;s3c_adc_con == ADC_TYPE_2) {</code></div><div class="line number396 index395 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* Clear ADC and PEN Down/UP interrupt */</code></div><div class="line number397 index396 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">__raw_writel(0x0, ts_base + S3C_ADCCLRWK);</code></div><div class="line number398 index397 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">__raw_writel(0x0, ts_base + S3C_ADCCLRINT);</code></div><div class="line number399 index398 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number400 index399 alt1">&nbsp;</div><div class="line number401 index400 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* TODO we should never get an interrupt with pendown set while</code></div><div class="line number402 index401 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* the timer is running, but maybe we ought to verify that the</code></div><div class="line number403 index402 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* timer isn't running anyways. */</code></div><div class="line number404 index403 alt1">&nbsp;</div><div class="line number405 index404 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">touch_timer_fire(1);</code></div><div class="line number406 index405 alt1">&nbsp;</div><div class="line number407 index406 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">IRQ_HANDLED;</code></div><div class="line number408 index407 alt1"><code class="cpp plain">}</code></div><div class="line number409 index408 alt2">&nbsp;</div><div class="line number410 index409 alt1"><code class="cpp comments">//ad转换结束中断服务程序==</code></div><div class="line number411 index410 alt2"><code class="cpp keyword bold">static</code> <code class="cpp plain">irqreturn_t stylus_action(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">irqno, </code><code class="cpp keyword bold">void</code> <code class="cpp plain">*param)</code></div><div class="line number412 index411 alt1"><code class="cpp plain">{</code></div><div class="line number413 index412 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data0;</code></div><div class="line number414 index413 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">unsigned </code><code class="cpp color1 bold">long</code> <code class="cpp plain">data1;</code></div><div class="line number415 index414 alt2">&nbsp;</div><div class="line number416 index415 alt1"><code class="cpp preprocessor">#ifdef CONFIG_MINI6410_ADC</code></div><div class="line number417 index416 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!ADC_locked4TS()) {</code></div><div class="line number418 index417 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ADC_free()) {</code></div><div class="line number419 index418 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printk(</code><code class="cpp string">"Unexpected\n"</code><code class="cpp plain">);</code></div><div class="line number420 index419 alt1">&nbsp;</div><div class="line number421 index420 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* Clear ADC interrupt */</code></div><div class="line number422 index421 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">__raw_writel(0x0, ts_base + S3C_ADCCLRINT);</code></div><div class="line number423 index422 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number424 index423 alt1">&nbsp;</div><div class="line number425 index424 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">IRQ_HANDLED;</code></div><div class="line number426 index425 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number427 index426 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number428 index427 alt1">&nbsp;</div><div class="line number429 index428 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">data0 = readl(ts_base + S3C_ADCDAT0);</code></div><div class="line number430 index429 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">data1 = readl(ts_base + S3C_ADCDAT1);</code></div><div class="line number431 index430 alt2">&nbsp;</div><div class="line number432 index431 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts-&gt;resol_bit == 12) {</code></div><div class="line number433 index432 alt2"><code class="cpp preprocessor">#if defined(CONFIG_TOUCHSCREEN_NEW)</code></div><div class="line number434 index433 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;yp += S3C_ADCDAT0_XPDATA_MASK_12BIT - (data0 &amp; S3C_ADCDAT0_XPDATA_MASK_12BIT);</code></div><div class="line number435 index434 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;xp += S3C_ADCDAT1_YPDATA_MASK_12BIT - (data1 &amp; S3C_ADCDAT1_YPDATA_MASK_12BIT);</code></div><div class="line number436 index435 alt1"><code class="cpp preprocessor">#else </code></div><div class="line number437 index436 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;xp += data0 &amp; S3C_ADCDAT0_XPDATA_MASK_12BIT;</code></div><div class="line number438 index437 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;yp += data1 &amp; S3C_ADCDAT1_YPDATA_MASK_12BIT;</code></div><div class="line number439 index438 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number440 index439 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div><div class="line number441 index440 alt2"><code class="cpp preprocessor">#if defined(CONFIG_TOUCHSCREEN_NEW)</code></div><div class="line number442 index441 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;yp += S3C_ADCDAT0_XPDATA_MASK - (data0 &amp; S3C_ADCDAT0_XPDATA_MASK);</code></div><div class="line number443 index442 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;xp += S3C_ADCDAT1_YPDATA_MASK - (data1 &amp; S3C_ADCDAT1_YPDATA_MASK);</code></div><div class="line number444 index443 alt1"><code class="cpp preprocessor">#else</code></div><div class="line number445 index444 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;xp += data0 &amp; S3C_ADCDAT0_XPDATA_MASK;</code></div><div class="line number446 index445 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;yp += data1 &amp; S3C_ADCDAT1_YPDATA_MASK;</code></div><div class="line number447 index446 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number448 index447 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}&nbsp; </code><code class="cpp comments">// 转换结果累加</code></div><div class="line number449 index448 alt2">&nbsp;</div><div class="line number450 index449 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;count++;</code></div><div class="line number451 index450 alt2">&nbsp;</div><div class="line number452 index451 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts-&gt;count &lt; (1 &lt;&lt; ts-&gt;shift)) { </code><code class="cpp comments">// 采样未完成，继续下一次采样 ，通过 ENABLE_START 启动 AD 转换，一次一个数据</code></div><div class="line number453 index452 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(S3C_ADCTSC_PULL_UP_DISABLE | AUTOPST, ts_base + S3C_ADCTSC);</code></div><div class="line number454 index453 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(readl(ts_base + S3C_ADCCON) | S3C_ADCCON_ENABLE_START, ts_base + S3C_ADCCON);</code></div><div class="line number455 index454 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{&nbsp; </code><code class="cpp comments">// 采样完毕，激活下半部处理程序touch_timer_fire，处理接收数据&nbsp; </code></div><div class="line number456 index455 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mod_timer(&amp;touch_timer, jiffies + 1);&nbsp;&nbsp; </code><code class="cpp comments">//设置定时器超时的时间，目的是为了延时触发 touch_timer_fire 中断，如果在这段时间有抬起中断发生，则表示是抖动</code></div><div class="line number457 index456 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//jiffies变量记录了系统启动以来，系统定时器已经触发的次数。内核每秒钟将jiffies变量增加HZ次。</code></div><div class="line number458 index457 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//因此，对于HZ值为100的系统，1个jiffy等于10ms，而对于HZ为1000的系统，1个jiffy仅为1ms</code></div><div class="line number459 index458 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number460 index459 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(WAIT4INT(1), ts_base + S3C_ADCTSC);&nbsp;&nbsp; </code><code class="cpp comments">//设置为等待抬起中断</code></div><div class="line number461 index460 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number462 index461 alt1">&nbsp;</div><div class="line number463 index462 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts-&gt;s3c_adc_con == ADC_TYPE_2) {</code></div><div class="line number464 index463 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* Clear ADC and PEN Down/UP interrupt */</code></div><div class="line number465 index464 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">__raw_writel(0x0, ts_base + S3C_ADCCLRWK);</code></div><div class="line number466 index465 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">__raw_writel(0x0, ts_base + S3C_ADCCLRINT);</code></div><div class="line number467 index466 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number468 index467 alt1">&nbsp;</div><div class="line number469 index468 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">IRQ_HANDLED;</code></div><div class="line number470 index469 alt1"><code class="cpp plain">}</code></div><div class="line number471 index470 alt2">&nbsp;</div><div class="line number472 index471 alt1">&nbsp;</div><div class="line number473 index472 alt2"><code class="cpp preprocessor">#ifdef CONFIG_MINI6410_ADC</code></div><div class="line number474 index473 alt1"><code class="cpp keyword bold">static</code> <code class="cpp plain">unsigned </code><code class="cpp color1 bold">int</code> <code class="cpp plain">_adccon, _adctsc, _adcdly;</code></div><div class="line number475 index474 alt2">&nbsp;</div><div class="line number476 index475 alt1"><code class="cpp comments">//其它模块要用ADC时，需要调用这个函数，来确定ADC是否可用，如果可用，则将它锁住，不让别的驱动用</code></div><div class="line number477 index476 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">mini6410_adc_acquire_io(</code><code class="cpp keyword bold">void</code><code class="cpp plain">) {</code></div><div class="line number478 index477 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">ret;</code></div><div class="line number479 index478 alt2">&nbsp;</div><div class="line number480 index479 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = s3c_ts_adc_lock(LOCK_ADC); </code><code class="cpp comments">//锁住ADC，不让其它模块使用</code></div><div class="line number481 index480 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!ret) {&nbsp; </code><code class="cpp comments">//如果ADC没有被使用，则保存ADC寄存器的值</code></div><div class="line number482 index481 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_adccon = readl(ts_base + S3C_ADCCON);</code></div><div class="line number483 index482 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_adctsc = readl(ts_base + S3C_ADCTSC);</code></div><div class="line number484 index483 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_adcdly = readl(ts_base + S3C_ADCDLY);</code></div><div class="line number485 index484 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number486 index485 alt1">&nbsp;</div><div class="line number487 index486 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">ret;</code><code class="cpp comments">// 0:操作成功&nbsp; 1：操作失败</code></div><div class="line number488 index487 alt1"><code class="cpp plain">}</code></div><div class="line number489 index488 alt2"><code class="cpp plain">EXPORT_SYMBOL(mini6410_adc_acquire_io);&nbsp; </code><code class="cpp comments">//声明为外部可用</code></div><div class="line number490 index489 alt1">&nbsp;</div><div class="line number491 index490 alt2"><code class="cpp comments">//其它模块不要用ADC了，需要调用这个函数，来解锁ADC让别的驱动用</code></div><div class="line number492 index491 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">mini6410_adc_release_io(</code><code class="cpp keyword bold">void</code><code class="cpp plain">) {</code></div><div class="line number493 index492 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//还原ADC寄存器的设置</code></div><div class="line number494 index493 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(_adccon, ts_base + S3C_ADCCON);</code></div><div class="line number495 index494 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(_adctsc, ts_base + S3C_ADCTSC);</code></div><div class="line number496 index495 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(_adcdly, ts_base + S3C_ADCDLY);</code></div><div class="line number497 index496 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(WAIT4INT(0), ts_base + S3C_ADCTSC);</code></div><div class="line number498 index497 alt1">&nbsp;</div><div class="line number499 index498 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s3c_ts_adc_unlock(); </code><code class="cpp comments">//释放ADC，其它模块可以使用</code></div><div class="line number500 index499 alt1"><code class="cpp plain">}</code></div><div class="line number501 index500 alt2">&nbsp;</div><div class="line number502 index501 alt1"><code class="cpp plain">EXPORT_SYMBOL(mini6410_adc_release_io);</code></div><div class="line number503 index502 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number504 index503 alt1">&nbsp;</div><div class="line number505 index504 alt2"><code class="cpp comments">//获得触摸屏的配置信息==</code></div><div class="line number506 index505 alt1"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">struct</code> <code class="cpp plain">s3c_ts_mach_info *s3c_ts_get_platdata(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">device *dev)</code></div><div class="line number507 index506 alt2"><code class="cpp plain">{</code></div><div class="line number508 index507 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(dev-&gt;platform_data != NULL)</code></div><div class="line number509 index508 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">s3c_ts_mach_info *)dev-&gt;platform_data;&nbsp; </code><code class="cpp comments">//优先使用 arch/arm/mach-s3c64xx中的定义</code></div><div class="line number510 index509 alt1">&nbsp;</div><div class="line number511 index510 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">&amp;s3c_ts_default_cfg;&nbsp;&nbsp; </code><code class="cpp comments">//如果前面没定义，则使用本函数的default定义</code></div><div class="line number512 index511 alt1"><code class="cpp plain">}</code></div><div class="line number513 index512 alt2"><code class="cpp comments">//--</code></div><div class="line number514 index513 alt1">&nbsp;</div><div class="line number515 index514 alt2"><code class="cpp comments">/*</code></div><div class="line number516 index515 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* The functions for inserting/removing us as a module.</code></div><div class="line number517 index516 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number518 index517 alt1"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">__init s3c_ts_probe(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">platform_device *pdev)</code></div><div class="line number519 index518 alt2"><code class="cpp plain">{</code></div><div class="line number520 index519 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">resource *res;</code></div><div class="line number521 index520 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">device *dev;</code></div><div class="line number522 index521 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">s3c_ts_mach_info * s3c_ts_cfg;</code></div><div class="line number523 index522 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">ret, size;</code></div><div class="line number524 index523 alt1">&nbsp;</div><div class="line number525 index524 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev = &amp;pdev-&gt;dev;</code></div><div class="line number526 index525 alt1">&nbsp;</div><div class="line number527 index526 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">res = platform_get_resource(pdev, IORESOURCE_MEM, 0);</code></div><div class="line number528 index527 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(res == NULL) {</code></div><div class="line number529 index528 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev,</code><code class="cpp string">"no memory resource specified\n"</code><code class="cpp plain">);</code></div><div class="line number530 index529 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">-ENOENT;</code></div><div class="line number531 index530 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number532 index531 alt1">&nbsp;</div><div class="line number533 index532 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">size = (res-&gt;end - res-&gt;start) + 1;</code></div><div class="line number534 index533 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_mem = request_mem_region(res-&gt;start, size, pdev-&gt;name);</code></div><div class="line number535 index534 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts_mem == NULL) {</code></div><div class="line number536 index535 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev, </code><code class="cpp string">"failed to get memory region\n"</code><code class="cpp plain">);</code></div><div class="line number537 index536 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = -ENOENT;</code></div><div class="line number538 index537 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">goto</code> <code class="cpp plain">err_req;</code></div><div class="line number539 index538 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number540 index539 alt1">&nbsp;</div><div class="line number541 index540 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_base = ioremap(res-&gt;start, size);</code></div><div class="line number542 index541 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts_base == NULL) {</code></div><div class="line number543 index542 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev, </code><code class="cpp string">"failed to ioremap() region\n"</code><code class="cpp plain">);</code></div><div class="line number544 index543 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = -EINVAL;</code></div><div class="line number545 index544 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">goto</code> <code class="cpp plain">err_map;</code></div><div class="line number546 index545 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number547 index546 alt2">&nbsp;</div><div class="line number548 index547 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_clock = clk_get(&amp;pdev-&gt;dev, </code><code class="cpp string">"adc"</code><code class="cpp plain">);</code></div><div class="line number549 index548 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(IS_ERR(ts_clock)) {</code></div><div class="line number550 index549 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev, </code><code class="cpp string">"failed to find watchdog clock source\n"</code><code class="cpp plain">);</code></div><div class="line number551 index550 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = PTR_ERR(ts_clock);</code></div><div class="line number552 index551 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">goto</code> <code class="cpp plain">err_clk;</code></div><div class="line number553 index552 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number554 index553 alt1">&nbsp;</div><div class="line number555 index554 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">clk_enable(ts_clock);</code></div><div class="line number556 index555 alt1">&nbsp;</div><div class="line number557 index556 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s3c_ts_cfg = s3c_ts_get_platdata(&amp;pdev-&gt;dev);&nbsp; </code><code class="cpp comments">//获取配置参数</code></div><div class="line number558 index557 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number559 index558 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//设置ADC分频</code></div><div class="line number560 index559 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">((s3c_ts_cfg-&gt;presc &amp; 0xff) &gt; 0)&nbsp; </code></div><div class="line number561 index560 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(S3C_ADCCON_PRSCEN | S3C_ADCCON_PRSCVL(s3c_ts_cfg-&gt;presc &amp; 0xff),</code></div><div class="line number562 index561 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_base + S3C_ADCCON);</code></div><div class="line number563 index562 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number564 index563 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(0, ts_base + S3C_ADCCON);</code></div><div class="line number565 index564 alt2">&nbsp;</div><div class="line number566 index565 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* Initialise registers */</code></div><div class="line number567 index566 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//设置转换延时</code></div><div class="line number568 index567 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">((s3c_ts_cfg-&gt;delay &amp; 0xffff) &gt; 0)</code></div><div class="line number569 index568 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(s3c_ts_cfg-&gt;delay &amp; 0xffff, ts_base + S3C_ADCDLY);</code></div><div class="line number570 index569 alt1">&nbsp;</div><div class="line number571 index570 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(s3c_ts_cfg-&gt;resol_bit == 12) {</code></div><div class="line number572 index571 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">switch</code><code class="cpp plain">(s3c_ts_cfg-&gt;s3c_adc_con) {</code></div><div class="line number573 index572 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">case</code> <code class="cpp plain">ADC_TYPE_2:</code></div><div class="line number574 index573 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(readl(ts_base + S3C_ADCCON) | S3C_ADCCON_RESSEL_12BIT,</code></div><div class="line number575 index574 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_base + S3C_ADCCON);</code></div><div class="line number576 index575 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number577 index576 alt2">&nbsp;</div><div class="line number578 index577 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">case</code> <code class="cpp plain">ADC_TYPE_1:</code></div><div class="line number579 index578 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(readl(ts_base + S3C_ADCCON) | S3C_ADCCON_RESSEL_12BIT_1,</code></div><div class="line number580 index579 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_base + S3C_ADCCON);</code></div><div class="line number581 index580 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number582 index581 alt1">&nbsp;</div><div class="line number583 index582 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">default</code><code class="cpp plain">:</code></div><div class="line number584 index583 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev, </code><code class="cpp string">"Touchscreen over this type of AP isn't supported !\n"</code><code class="cpp plain">);</code></div><div class="line number585 index584 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number586 index585 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number587 index586 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number588 index587 alt1">&nbsp;</div><div class="line number589 index588 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(WAIT4INT(0), ts_base + S3C_ADCTSC);</code></div><div class="line number590 index589 alt1">&nbsp;</div><div class="line number591 index590 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts = kzalloc(</code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">s3c_ts_info), GFP_KERNEL);</code></div><div class="line number592 index591 alt1">&nbsp;</div><div class="line number593 index592 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;shift = s3c_ts_cfg-&gt;oversampling_shift;</code></div><div class="line number594 index593 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;resol_bit = s3c_ts_cfg-&gt;resol_bit;</code></div><div class="line number595 index594 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts-&gt;s3c_adc_con = s3c_ts_cfg-&gt;s3c_adc_con;</code></div><div class="line number596 index595 alt1">&nbsp;</div><div class="line number597 index596 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* For IRQ_PENDUP */</code></div><div class="line number598 index597 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_irq = platform_get_resource(pdev, IORESOURCE_IRQ, 0);</code></div><div class="line number599 index598 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts_irq == NULL) {</code></div><div class="line number600 index599 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev, </code><code class="cpp string">"no irq resource specified\n"</code><code class="cpp plain">);</code></div><div class="line number601 index600 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = -ENOENT;</code></div><div class="line number602 index601 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">goto</code> <code class="cpp plain">err_irq;</code></div><div class="line number603 index602 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number604 index603 alt1">&nbsp;</div><div class="line number605 index604 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = request_irq(ts_irq-&gt;start, stylus_updown, IRQF_SAMPLE_RANDOM, </code><code class="cpp string">"s3c_updown"</code><code class="cpp plain">, ts);</code></div><div class="line number606 index605 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ret != 0) {</code></div><div class="line number607 index606 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev,</code><code class="cpp string">"s3c_ts.c: Could not allocate ts IRQ_PENDN !\n"</code><code class="cpp plain">);</code></div><div class="line number608 index607 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = -EIO;</code></div><div class="line number609 index608 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">goto</code> <code class="cpp plain">err_irq;</code></div><div class="line number610 index609 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number611 index610 alt2">&nbsp;</div><div class="line number612 index611 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* For IRQ_ADC */</code></div><div class="line number613 index612 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_irq = platform_get_resource(pdev, IORESOURCE_IRQ, 1);</code></div><div class="line number614 index613 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts_irq == NULL) {</code></div><div class="line number615 index614 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev, </code><code class="cpp string">"no irq resource specified\n"</code><code class="cpp plain">);</code></div><div class="line number616 index615 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = -ENOENT;</code></div><div class="line number617 index616 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">goto</code> <code class="cpp plain">err_irq;</code></div><div class="line number618 index617 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number619 index618 alt2">&nbsp;</div><div class="line number620 index619 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = request_irq(ts_irq-&gt;start, stylus_action, IRQF_SAMPLE_RANDOM | IRQF_SHARED,</code></div><div class="line number621 index620 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp string">"s3c_action"</code><code class="cpp plain">, ts);</code></div><div class="line number622 index621 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ret != 0) {</code></div><div class="line number623 index622 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev, </code><code class="cpp string">"s3c_ts.c: Could not allocate ts IRQ_ADC !\n"</code><code class="cpp plain">);</code></div><div class="line number624 index623 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = -EIO;</code></div><div class="line number625 index624 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">goto</code> <code class="cpp plain">err_irq;</code></div><div class="line number626 index625 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number627 index626 alt2">&nbsp;</div><div class="line number628 index627 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printk(KERN_INFO </code><code class="cpp string">"%s got loaded successfully : %d bits\n"</code><code class="cpp plain">, DEVICE_NAME, s3c_ts_cfg-&gt;resol_bit);</code></div><div class="line number629 index628 alt2">&nbsp;</div><div class="line number630 index629 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = misc_register(&amp;misc);&nbsp; </code><code class="cpp comments">//注册这混杂字符设备</code></div><div class="line number631 index630 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ret) {</code></div><div class="line number632 index631 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dev_err(dev, </code><code class="cpp string">"s3c_ts.c: Could not register device(mini6410 touchscreen)!\n"</code><code class="cpp plain">);</code></div><div class="line number633 index632 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ret = -EIO;</code></div><div class="line number634 index633 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">goto</code> <code class="cpp plain">fail;</code></div><div class="line number635 index634 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number636 index635 alt1">&nbsp;</div><div class="line number637 index636 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number638 index637 alt1">&nbsp;</div><div class="line number639 index638 alt2"><code class="cpp plain">fail:</code></div><div class="line number640 index639 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">free_irq(ts_irq-&gt;start, ts-&gt;dev);</code></div><div class="line number641 index640 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">free_irq(ts_irq-&gt;end, ts-&gt;dev);</code></div><div class="line number642 index641 alt1">&nbsp;</div><div class="line number643 index642 alt2"><code class="cpp plain">err_irq:</code></div><div class="line number644 index643 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kfree(ts);</code></div><div class="line number645 index644 alt2">&nbsp;</div><div class="line number646 index645 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">clk_disable(ts_clock);</code></div><div class="line number647 index646 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">clk_put(ts_clock);</code></div><div class="line number648 index647 alt1">&nbsp;</div><div class="line number649 index648 alt2"><code class="cpp plain">err_clk:</code></div><div class="line number650 index649 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">iounmap(ts_base);</code></div><div class="line number651 index650 alt2">&nbsp;</div><div class="line number652 index651 alt1"><code class="cpp plain">err_map:</code></div><div class="line number653 index652 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">release_resource(ts_mem);</code></div><div class="line number654 index653 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kfree(ts_mem);</code></div><div class="line number655 index654 alt2">&nbsp;</div><div class="line number656 index655 alt1"><code class="cpp plain">err_req:</code></div><div class="line number657 index656 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">ret;</code></div><div class="line number658 index657 alt1"><code class="cpp plain">}</code></div><div class="line number659 index658 alt2">&nbsp;</div><div class="line number660 index659 alt1"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">s3c_ts_remove(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">platform_device *dev)</code></div><div class="line number661 index660 alt2"><code class="cpp plain">{</code></div><div class="line number662 index661 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printk(KERN_INFO </code><code class="cpp string">"s3c_ts_remove() of TS called !\n"</code><code class="cpp plain">);</code></div><div class="line number663 index662 alt2">&nbsp;</div><div class="line number664 index663 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">disable_irq(IRQ_ADC);</code></div><div class="line number665 index664 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">disable_irq(IRQ_PENDN);</code></div><div class="line number666 index665 alt1">&nbsp;</div><div class="line number667 index666 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">free_irq(IRQ_PENDN, ts-&gt;dev);</code></div><div class="line number668 index667 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">free_irq(IRQ_ADC, ts-&gt;dev);</code></div><div class="line number669 index668 alt2">&nbsp;</div><div class="line number670 index669 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(ts_clock) {</code></div><div class="line number671 index670 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">clk_disable(ts_clock);</code></div><div class="line number672 index671 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">clk_put(ts_clock);</code></div><div class="line number673 index672 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ts_clock = NULL;</code></div><div class="line number674 index673 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number675 index674 alt2">&nbsp;</div><div class="line number676 index675 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">misc_deregister(&amp;misc);</code></div><div class="line number677 index676 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">iounmap(ts_base);</code></div><div class="line number678 index677 alt1">&nbsp;</div><div class="line number679 index678 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number680 index679 alt1"><code class="cpp plain">}</code></div><div class="line number681 index680 alt2">&nbsp;</div><div class="line number682 index681 alt1"><code class="cpp preprocessor">#ifdef CONFIG_PM</code></div><div class="line number683 index682 alt2"><code class="cpp keyword bold">static</code> <code class="cpp plain">unsigned </code><code class="cpp color1 bold">int</code> <code class="cpp plain">adccon, adctsc, adcdly;</code></div><div class="line number684 index683 alt1">&nbsp;</div><div class="line number685 index684 alt2"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">s3c_ts_suspend(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">platform_device *dev, pm_message_t state)</code></div><div class="line number686 index685 alt1"><code class="cpp plain">{</code></div><div class="line number687 index686 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">adccon = readl(ts_base + S3C_ADCCON);</code></div><div class="line number688 index687 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">adctsc = readl(ts_base + S3C_ADCTSC);</code></div><div class="line number689 index688 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">adcdly = readl(ts_base + S3C_ADCDLY);</code></div><div class="line number690 index689 alt1">&nbsp;</div><div class="line number691 index690 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">disable_irq(IRQ_ADC);</code></div><div class="line number692 index691 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">disable_irq(IRQ_PENDN);</code></div><div class="line number693 index692 alt2">&nbsp;</div><div class="line number694 index693 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">clk_disable(ts_clock);</code></div><div class="line number695 index694 alt2">&nbsp;</div><div class="line number696 index695 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number697 index696 alt2"><code class="cpp plain">}</code></div><div class="line number698 index697 alt1">&nbsp;</div><div class="line number699 index698 alt2"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">s3c_ts_resume(</code><code class="cpp keyword bold">struct</code> <code class="cpp plain">platform_device *pdev)</code></div><div class="line number700 index699 alt1"><code class="cpp plain">{</code></div><div class="line number701 index700 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">clk_enable(ts_clock);</code></div><div class="line number702 index701 alt1">&nbsp;</div><div class="line number703 index702 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(adccon, ts_base + S3C_ADCCON);</code></div><div class="line number704 index703 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(adctsc, ts_base + S3C_ADCTSC);</code></div><div class="line number705 index704 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(adcdly, ts_base + S3C_ADCDLY);</code></div><div class="line number706 index705 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">writel(WAIT4INT(0), ts_base + S3C_ADCTSC);</code></div><div class="line number707 index706 alt2">&nbsp;</div><div class="line number708 index707 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">enable_irq(IRQ_ADC);</code></div><div class="line number709 index708 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">enable_irq(IRQ_PENDN);</code></div><div class="line number710 index709 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number711 index710 alt2"><code class="cpp plain">}</code></div><div class="line number712 index711 alt1"><code class="cpp preprocessor">#else</code></div><div class="line number713 index712 alt2"><code class="cpp preprocessor">#define s3c_ts_suspend&nbsp; NULL</code></div><div class="line number714 index713 alt1"><code class="cpp preprocessor">#define s3c_ts_resume&nbsp;&nbsp; NULL</code></div><div class="line number715 index714 alt2"><code class="cpp preprocessor">#endif</code></div><div class="line number716 index715 alt1">&nbsp;</div><div class="line number717 index716 alt2"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">struct</code> <code class="cpp plain">platform_driver s3c_ts_driver = {</code></div><div class="line number718 index717 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.probe&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = s3c_ts_probe,</code></div><div class="line number719 index718 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.</code><code class="cpp functions bold">remove</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code class="cpp plain">= s3c_ts_remove,</code></div><div class="line number720 index719 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.suspend&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = s3c_ts_suspend,</code></div><div class="line number721 index720 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.resume&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = s3c_ts_resume,</code></div><div class="line number722 index721 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.driver&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = {</code></div><div class="line number723 index722 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.owner&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = THIS_MODULE,</code></div><div class="line number724 index723 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = </code><code class="cpp string">"s3c-ts"</code><code class="cpp plain">,</code></div><div class="line number725 index724 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">},</code></div><div class="line number726 index725 alt1"><code class="cpp plain">};</code></div><div class="line number727 index726 alt2">&nbsp;</div><div class="line number728 index727 alt1"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">char</code> <code class="cpp plain">banner[] __initdata = KERN_INFO </code><code class="cpp string">"S3C Touchscreen driver, (c) 2010 FriendlyARM,\n"</code><code class="cpp plain">;</code></div><div class="line number729 index728 alt2">&nbsp;</div><div class="line number730 index729 alt1"><code class="cpp keyword bold">static</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">__init s3c_ts_init(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number731 index730 alt2"><code class="cpp plain">{</code></div><div class="line number732 index731 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printk(banner);</code></div><div class="line number733 index732 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">platform_driver_register(&amp;s3c_ts_driver);</code></div><div class="line number734 index733 alt1"><code class="cpp plain">}</code></div><div class="line number735 index734 alt2">&nbsp;</div><div class="line number736 index735 alt1"><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">__exit s3c_ts_exit(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number737 index736 alt2"><code class="cpp plain">{</code></div><div class="line number738 index737 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">platform_driver_unregister(&amp;s3c_ts_driver);</code></div><div class="line number739 index738 alt2"><code class="cpp plain">}</code></div><div class="line number740 index739 alt1">&nbsp;</div><div class="line number741 index740 alt2"><code class="cpp plain">module_init(s3c_ts_init);</code></div><div class="line number742 index741 alt1"><code class="cpp plain">module_exit(s3c_ts_exit);</code></div><div class="line number743 index742 alt2">&nbsp;</div><div class="line number744 index743 alt1"><code class="cpp plain">MODULE_AUTHOR(</code><code class="cpp string">"FriendlyARM Inc."</code><code class="cpp plain">);</code></div><div class="line number745 index744 alt2"><code class="cpp plain">MODULE_LICENSE(</code><code class="cpp string">"GPL"</code><code class="cpp plain">);</code></div><div class="line number746 index745 alt1">&nbsp;</div><div class="line number747 index746 alt2">&nbsp;</div><div class="line number748 index747 alt1"><code class="cpp comments">/*</code></div><div class="line number749 index748 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* 驱动分析</code></div><div class="line number750 index749 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* 1、内核是如何加载驱动的？</code></div><div class="line number751 index750 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp; 首先要提到两个结构体：设备用Platform_device表示，驱动用Platform_driver进行注册</code></div><div class="line number752 index751 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp; Platform机制开发发底层驱动的大致流程为:&nbsp; 定义 platform_device&nbsp; 注册 platform_device 定义 platform_driver 注册 platform_driver</code></div><div class="line number753 index752 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp; 首先要确认的就是设备的资源信息platform_device，例如设备的地址，中断号等 该结构体定义在kernel\include\linux\platform_device.h</code></div><div class="line number754 index753 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp; 该结构一个重要的元素是resource，该元素存入了最为重要的设备资源信息，定义在kernel\include\linux\ioport.h中</code></div><div class="line number755 index754 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp; 下面我们以本例来进行说明：</code></div><div class="line number756 index755 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arch/arm/mach-s3c64xx中dev-ts-mini6410.c中定义了platform_device s3c_device_ts</code></div><div class="line number757 index756 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 定义好了platform_device结构体后就可以调用函数platform_add_devices向系统中添加该设备了，之后可以调用platform_driver_register()进行设备注册。</code></div><div class="line number758 index757 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 要注意的是，这里的platform_device设备的注册过程必须在相应设备驱动加载之前被调用，即执行platform_driver_register之前,原因是因为驱动注册时需要</code></div><div class="line number759 index758 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 匹配内核中所以已注册的设备名。</code></div><div class="line number760 index759 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; platform_devicerr的注册是在arch/arm/mach-s3c64xx中mach-mini6410.c中的mini6410_machine_init函数实现的。</code></div><div class="line number761 index760 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mini6410_machine_init是在启动后调用，它是在module_init之前；更具体的见MACHINE_START</code></div><div class="line number762 index761 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp; MACHINE_START(MINI6410, "MINI6410")</code></div><div class="line number763 index762 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div><div class="line number764 index763 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .boot_params&nbsp; = S3C64XX_PA_SDRAM + 0x100,&nbsp; //.boot_params是bootloader向内核传递的参数的位置，这要和bootloader中参数的定义要一致。</code></div><div class="line number765 index764 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*</code></div><div class="line number766 index765 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .init_irq = s3c6410_init_irq,&nbsp; //.init_irq在start_kernel() --&gt; init_IRQ() --&gt; init_arch_irq()中被调用</code></div><div class="line number767 index766 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .map_io&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = mini6410_map_io,&nbsp;&nbsp; //.map_io 在 setup_arch() --&gt; paging_init() --&gt; devicemaps_init()中被调用</code></div><div class="line number768 index767 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .init_machine = mini6410_machine_init,&nbsp; //init_machine 在 arch/arm/kernel/setup.c 中被 customize_machine 调用，</code></div><div class="line number769 index768 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //放在 arch_initcall() 段里面，会自动按顺序被调用。</code></div><div class="line number770 index769 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .timer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &amp;s3c24xx_timer,&nbsp; //.timer是定义系统时钟，定义TIMER4为系统时钟，在arch/arm/plat-s3c/time.c中体现。</code></div><div class="line number771 index770 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //在start_kernel() --&gt; time_init()中被调用。</code></div><div class="line number772 index771 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MACHINE_END</code></div><div class="line number773 index772 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 再来看看platform_driver，这个定义在本文中，</code></div><div class="line number774 index773 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在驱动初始化函数中调用函数platform_driver_register()注册platform_driver，需要注意的是s3c_device_ts结构中name元素和s3c_ts_driver结构中driver.name</code></div><div class="line number775 index774 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 必须是相同的，这样在platform_driver_register()注册时会对所有已注册的所有platform_device中的name和当前注册的platform_driver的driver.name进行比较，</code></div><div class="line number776 index775 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 只有找到相同的名称的platfomr_device才能注册成功，当注册成功时会调用platform_driver结构元素probe函数指针，这里就是s3c_ts_probe</code></div><div class="line number777 index776 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 参考资料：<a href="http://blogold.chinaunix.net/u2/60011/showart.php?id=1018502">http://blogold.chinaunix.net/u2/60011/showart.php?id=1018502</a></code></div><div class="line number778 index777 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* </code></div><div class="line number779 index778 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* 2、timer在这里的作用</code></div><div class="line number780 index779 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp; timer是用来防抖的，我们知道，触摸屏处理分为两个时间段，一个是由按下中断触发的四次AD转换的时间A，一个是4次AD转换完成后将AD数据存入FIFO的时间B，在时间A，没有打开抬起中断，</code></div><div class="line number781 index780 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp; 也就是说如果在这段时间有抬起事件，也不会触发中断，不会影响AD的转换。在时间B，打开抬起中断，打开定时器延时触发touch_timer_fire，如果在延时这段时间，有抬起事件发生</code></div><div class="line number782 index781 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 则touch_timer_fire不会将前面的数据存入到FIFO中，否则写入FIFO，表示值有效。</code></div><div class="line number783 index782 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* </code></div><div class="line number784 index783 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* </code></div><div class="line number785 index784 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*/</code></div></div></td></tr></tbody></table></div></div>
</div>
<br><p></p></div>




		
	</div>
	
	
	






	

</div>

			
			
			
			
			 

	




</body></html>