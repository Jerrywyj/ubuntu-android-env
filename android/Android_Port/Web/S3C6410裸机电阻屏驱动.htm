<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0051)http://blog.csdn.net/cp1300/article/details/7833946 -->
<html xmlns="http://www.w3.org/1999/xhtml" version="g42dymwpi--nx"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>S3C6410裸机电阻屏驱动 - 与其用泪水悔恨今天，不如用汗水拼搏今天 - 博客频道 - CSDN.NET</title>

<meta name="description" content="使用的是RVDS4.0编译的大家主要是看看如何配置模式的我之前一直使用自动X,Y采样，但是读取的都不准，最后采样分离的，才可以,需要注意的是使能ADC读开始后需要先读转换结果寄存器,但是此时读取的是上一次的转换结果,如果是连续读取需要等待转换完成,否则转换结果不准. adc.c/************************************************">
<script type="text/javascript" async="" src="./S3C6410裸机电阻屏驱动_files/ga.js"></script><script src="./S3C6410裸机电阻屏驱动_files/jquery.js" type="text/javascript"></script><style type="text/css"></style>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>


<link rel="shortcut icon" href="http://blog.csdn.net/favicon.ico">
<link type="text/css" rel="stylesheet" href="./S3C6410裸机电阻屏驱动_files/default.css">
<link type="text/css" rel="stylesheet" href="./S3C6410裸机电阻屏驱动_files/style.css"><style>@-moz-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@-webkit-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@-o-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}embed,object{animation-duration:.001s;-ms-animation-duration:.001s;-moz-animation-duration:.001s;-webkit-animation-duration:.001s;-o-animation-duration:.001s;animation-name:nodeInserted;-ms-animation-name:nodeInserted;-moz-animation-name:nodeInserted;-webkit-animation-name:nodeInserted;-o-animation-name:nodeInserted;}</style></head>
<body>




<div id="container">



        
<div id="body">
<div id="main">
<div class="main">
<div id="article_details" class="details">
    <div class="article_title">
    
    <h3>
        <span class="link_title"><a href="./S3C6410裸机电阻屏驱动_files/S3C6410裸机电阻屏驱动.htm">
        S3C6410裸机电阻屏驱动
        </a></span>
    </h3>
</div>

        
    


    
<div id="article_content" class="article_content">

<p>使用的是RVDS4.0编译的</p>
<p>大家主要是看看如何配置模式的</p>
<p>我之前一直使用自动X,Y采样，但是读取的都不准，最后采样分离的，才可以,需要注意的是使能ADC读开始后需要先读转换结果寄存器,但是此时读取的是上一次的转换结果,如果是连续读取需要等待转换完成,否则转换结果不准.</p>
<p>&nbsp;</p>
<p>adc.c</p>
<p></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 372px; top: 602px; width: 18px; height: 18px; z-index: 99;"><embed id="ZeroClipboardMovie_1" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="18" height="18" name="ZeroClipboardMovie_1" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=1&amp;width=18&amp;height=18" wmode="transparent"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="comment">/*************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;文件名:&nbsp;ADC.c</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;功能:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S3C6410&nbsp;ADC底层驱动函数</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;作者:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;创建时间:&nbsp;&nbsp;&nbsp;&nbsp;2012年3月12日21:05</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;最后修改时间:2012年3月12日</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;详细:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;触摸屏驱动以及相关ADC驱动</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;问题:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一直以来存在一个误区,一直以为使用了启动开始读操作,每次读DAT寄存器后就可以读取到转换后的数据,最终发现使用这个后读到的是上一次的数据,</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还是需要等到转换完成,否则连续转换的时候数据会非常乱.</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在使用的是手动控制转换开始</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"system.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"ADC.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//ADC的控制寄存器&nbsp;ADCCON</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADCCON_RESSEL_12BIT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1&nbsp;&lt;&lt;&nbsp;16)&nbsp;//12bit模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADCCON_ECFLG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0&nbsp;&lt;&lt;&nbsp;15)&nbsp;//A/D转换结束标志只读;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADCCON_PRSCEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1&nbsp;&lt;&lt;&nbsp;14)&nbsp;//A/D转换器预分频器使能</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADCCON_PRSCVL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(32&nbsp;&lt;&lt;&nbsp;6)&nbsp;//预分频值,1-255,分频值+1,至少为PCLK的1/5,此时PCLK&nbsp;=&nbsp;66MHZ,在2.5MHZ时钟下转换最快</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADCCON_SEL_MUX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0&nbsp;&nbsp;&lt;&lt;&nbsp;3)&nbsp;//默认选择通道0</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADCCON_STDBM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0&nbsp;&nbsp;&lt;&lt;&nbsp;2)&nbsp;//正常模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADCCON_READ_START&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0&nbsp;&nbsp;&lt;&lt;&nbsp;1)&nbsp;//关闭启动开始读操作</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADCCON_ENABLE_START&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0&nbsp;&nbsp;&lt;&lt;&nbsp;0)&nbsp;//如果READ_START&nbsp;启用，这个值是无效的。</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//ADCDLY</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADCDLY_DELAY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;500&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//自动采样延时时间,</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;SetADC_Channel(u8&nbsp;ch)</span>&nbsp;</span></li><li class=""><span><span class="comment">*功能&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;设置ADC输入通道</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*参数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;ch:通道号,0-7</span>&nbsp;</span></li><li class=""><span><span class="comment">*返回&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*依赖&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;底层宏定义</span>&nbsp;</span></li><li class=""><span><span class="comment">*作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*时间&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;20120513</span>&nbsp;</span></li><li class=""><span><span class="comment">*最后修改时间:&nbsp;&nbsp;&nbsp;&nbsp;20120513</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*说明&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;ADC输入通道选择</span>&nbsp;</span></li><li class=""><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;SetADC_Channel(u8&nbsp;ch)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;CON&nbsp;&amp;=&nbsp;~(7&nbsp;&lt;&lt;&nbsp;3);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除通道</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;CON&nbsp;|=&nbsp;ch&nbsp;&amp;&nbsp;(0x07);&nbsp;<span class="comment">//设置通道号</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">*函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;ADC_Init(void)</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*功能&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;ADC初始始化</span>&nbsp;</span></li><li class=""><span><span class="comment">*参数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*返回&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*依赖&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;底层宏定义</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class=""><span><span class="comment">*时间&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;20120312</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*最后修改时间:&nbsp;&nbsp;&nbsp;&nbsp;20120313</span>&nbsp;</span></li><li class=""><span><span class="comment">*说明&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;ADC初始始化</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;ADC_Init(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//ADC的控制寄存器配置;12BIT模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;CON&nbsp;=&nbsp;ADCCON_RESSEL_12BIT&nbsp;+&nbsp;ADCCON_ECFLG&nbsp;+&nbsp;ADCCON_PRSCEN&nbsp;+&nbsp;ADCCON_PRSCVL&nbsp;+&nbsp;ADCCON_SEL_MUX&nbsp;+&nbsp;ADCCON_STDBM&nbsp;+&nbsp;ADCCON_READ_START&nbsp;+&nbsp;ADCCON_ENABLE_START;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;DLY&nbsp;=&nbsp;ADCDLY_DELAY;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//设置自动间隔采样时间</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;ADC_SetMode(u8&nbsp;Mode)</span>&nbsp;</span></li><li class=""><span><span class="comment">*功能&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;设置ADC模式</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*参数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*返回&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*依赖&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;底层宏定义</span>&nbsp;</span></li><li class=""><span><span class="comment">*作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*时间&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;20120313</span>&nbsp;</span></li><li class=""><span><span class="comment">*最后修改时间:&nbsp;&nbsp;&nbsp;&nbsp;20120313</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*说明&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;设置ADC模式</span>&nbsp;</span></li><li class=""><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;ADC_SetMode(u8&nbsp;Mode)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;(1&nbsp;&lt;&lt;&nbsp;8);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除原先设置</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;CON&nbsp;&amp;=&nbsp;~BIT2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//退出待机模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;XP_UP_DISABLE();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//XP上拉禁止</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Normal_ADC_Mode();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//普通ADC模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">switch</span><span>(Mode)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;COMMON_AD_MODER:&nbsp;&nbsp;&nbsp;</span><span class="comment">//普通ADC模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Normal_ADC_Mode();<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ASUNDER_X_MODER:&nbsp;&nbsp;&nbsp;</span><span class="comment">//分离的X扫描模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_XP_VDD();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_XM_GND();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_YP_HZ();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_YM_HZ();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X_PosMode();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//XP=外部电源,XM=GND,YP=AIN5,YM=高阻</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ASUNDER_Y_MODER:&nbsp;&nbsp;&nbsp;</span><span class="comment">//分离的Y扫描模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_XP_HZ();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_XM_HZ();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_YP_VDD();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_YM_GND();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y_PosMode();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//XP=AIN7,XM=高阻,YP=外部电源,YM=GND</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;AUTO_XY_MODER:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//自动XY扫描模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AUTO_XYPosition();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;INT_AD_MODER:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//等待中断模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_XP_HZ();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_XM_HZ();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_YP_HZ();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_YM_GND();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XP_UP_ENABLE();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//XP上拉使能&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INT_WaitingMode();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="keyword">break</span><span>;</span><span class="comment">//XP上拉,XM=高阻,YP=AIN5,YM=GND</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;STANDBY_AD_MODER:&nbsp;&nbsp;</span><span class="comment">//掉电模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StandbyMode();<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">default</span><span>:</span><span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;ADC_ReadX(void)</span>&nbsp;</span></li><li class=""><span><span class="comment">*功能&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;读取X坐标</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*参数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*返回&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;X坐标原始坐标值</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*依赖&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;底层宏定义</span>&nbsp;</span></li><li class=""><span><span class="comment">*作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*时间&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;20121006</span>&nbsp;</span></li><li class=""><span><span class="comment">*最后修改时间:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20121006</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*说明&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;读取的是ADC转换寄存器0</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要先设置ADC模式</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>u16&nbsp;ADC_ReadX(<span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_Start();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//开始一次ADC转换</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_Wait();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//等待转换完成</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;ADC_ReadData0();&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;ADC_ReadY(void)</span>&nbsp;</span></li><li class=""><span><span class="comment">*功能&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;读取Y坐标</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*参数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*返回&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;Y坐标原始坐标值</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*依赖&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;底层宏定义</span>&nbsp;</span></li><li class=""><span><span class="comment">*作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*时间&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;20121006</span>&nbsp;</span></li><li class=""><span><span class="comment">*最后修改时间:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20121006</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*说明&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;读取的是ADC转换寄存器1</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要先设置ADC模式</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>u16&nbsp;ADC_ReadY(<span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_Start();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//开始一次ADC转换</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_Wait();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//等待转换完成</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;ADC_ReadData1();&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;Get_TouchState(void)</span>&nbsp;</span></li><li class=""><span><span class="comment">*功能&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;获取触摸状态</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*参数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*返回&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;1:笔抬起;0:笔按下</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*依赖&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;底层宏定义</span>&nbsp;</span></li><li class=""><span><span class="comment">*作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*时间&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;20120315</span>&nbsp;</span></li><li class=""><span><span class="comment">*最后修改时间:&nbsp;&nbsp;&nbsp;&nbsp;20120315</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*说明&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;通过读取ADCDAT1的BIT15来确定状态</span>&nbsp;</span></li><li class=""><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>u8&nbsp;Get_TouchState(<span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>((ADC-&gt;DAT1&nbsp;&amp;&nbsp;BIT15)&nbsp;?&nbsp;TOUCH_UP&nbsp;:&nbsp;TOUCH_DOWN);&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//触摸屏中断服务函数</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;__irq&nbsp;Isr_Touch(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;TOUCH_ClearInt();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除触摸屏中断标志</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;VICInterruptEnd();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//中断结束</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="cpp" style="display: none;">/*************************************************************************************************************
 * 文件名:	ADC.c
 * 功能:		S3C6410 ADC底层驱动函数
 * 作者:		cp1300@139.com
 * 创建时间:	2012年3月12日21:05
 * 最后修改时间:2012年3月12日
 * 详细:		触摸屏驱动以及相关ADC驱动
 * 问题:		一直以来存在一个误区,一直以为使用了启动开始读操作,每次读DAT寄存器后就可以读取到转换后的数据,最终发现使用这个后读到的是上一次的数据,
 * 			还是需要等到转换完成,否则连续转换的时候数据会非常乱.
 * 			现在使用的是手动控制转换开始
*************************************************************************************************************/
#include "system.h"
#include "ADC.h"




//ADC的控制寄存器 ADCCON
#define ADCCON_RESSEL_12BIT			(1 &lt;&lt; 16)	//12bit模式
#define ADCCON_ECFLG 				(0 &lt;&lt; 15)	//A/D转换结束标志只读;
#define ADCCON_PRSCEN				(1 &lt;&lt; 14)	//A/D转换器预分频器使能
#define ADCCON_PRSCVL				(32	&lt;&lt; 6)	//预分频值,1-255,分频值+1,至少为PCLK的1/5,此时PCLK = 66MHZ,在2.5MHZ时钟下转换最快
#define ADCCON_SEL_MUX				(0	&lt;&lt; 3)	//默认选择通道0
#define ADCCON_STDBM				(0	&lt;&lt; 2)	//正常模式
#define ADCCON_READ_START			(0	&lt;&lt; 1)	//关闭启动开始读操作
#define ADCCON_ENABLE_START			(0  &lt;&lt; 0)	//如果READ_START 启用，这个值是无效的。


//ADCDLY
#define ADCDLY_DELAY				500			//自动采样延时时间,



/*************************************************************************************************************************
*函数        :	void SetADC_Channel(u8 ch)
*功能        :	设置ADC输入通道
*参数        :	ch:通道号,0-7
*返回        :	无
*依赖        : 	底层宏定义
*作者        :	cp1300@139.com
*时间        :	20120513
*最后修改时间:	20120513
*说明        :	ADC输入通道选择
*************************************************************************************************************************/
void SetADC_Channel(u8 ch)
{
	ADC-&gt;CON &amp;= ~(7 &lt;&lt; 3);		//清除通道
	ADC-&gt;CON |= ch &amp; (0x07);	//设置通道号
}



/*************************************************************************************************************************
*函数        :	void ADC_Init(void)
*功能        :	ADC初始始化
*参数        :	无
*返回        :	无
*依赖        : 	底层宏定义
*作者        :	cp1300@139.com
*时间        :	20120312
*最后修改时间:	20120313
*说明        :	ADC初始始化
*************************************************************************************************************************/
void ADC_Init(void)
{
	//ADC的控制寄存器配置;12BIT模式
	ADC-&gt;CON = ADCCON_RESSEL_12BIT + ADCCON_ECFLG + ADCCON_PRSCEN + ADCCON_PRSCVL + ADCCON_SEL_MUX + ADCCON_STDBM + ADCCON_READ_START + ADCCON_ENABLE_START;
	ADC-&gt;DLY = ADCDLY_DELAY;								//设置自动间隔采样时间
}


/*************************************************************************************************************************
*函数        :	void ADC_SetMode(u8 Mode)
*功能        :	设置ADC模式
*参数        :	无
*返回        :	无
*依赖        : 	底层宏定义
*作者        :	cp1300@139.com
*时间        :	20120313
*最后修改时间:	20120313
*说明        :	设置ADC模式
*************************************************************************************************************************/
void ADC_SetMode(u8 Mode)
{
	ADC-&gt;TSC &amp;= (1 &lt;&lt; 8);		//清除原先设置
	ADC-&gt;CON &amp;= ~BIT2;			//退出待机模式
	XP_UP_DISABLE();			//XP上拉禁止
	Normal_ADC_Mode();			//普通ADC模式
	switch(Mode)
	{
		case COMMON_AD_MODER:	//普通ADC模式
			Normal_ADC_Mode();break;
		case ASUNDER_X_MODER:	//分离的X扫描模式
		{
			ADCTSC_XP_VDD();
			ADCTSC_XM_GND();
			ADCTSC_YP_HZ();
			ADCTSC_YM_HZ();
			X_PosMode();
		}break;		//XP=外部电源,XM=GND,YP=AIN5,YM=高阻
		case ASUNDER_Y_MODER:	//分离的Y扫描模式
		{
			ADCTSC_XP_HZ();
			ADCTSC_XM_HZ();
			ADCTSC_YP_VDD();
			ADCTSC_YM_GND();
			Y_PosMode();
		}break;		//XP=AIN7,XM=高阻,YP=外部电源,YM=GND
		case AUTO_XY_MODER:		//自动XY扫描模式
		{
			AUTO_XYPosition();
		}break;
		case INT_AD_MODER:		//等待中断模式
		{
			ADCTSC_XP_HZ();
			ADCTSC_XM_HZ();
			ADCTSC_YP_HZ();
			ADCTSC_YM_GND();
			XP_UP_ENABLE();		//XP上拉使能			
			INT_WaitingMode();
		}break;//XP上拉,XM=高阻,YP=AIN5,YM=GND
		case STANDBY_AD_MODER:	//掉电模式
			StandbyMode();break;
		default:break;
	}
}



/*************************************************************************************************************************
*函数        :	u16 ADC_ReadX(void)
*功能        :	读取X坐标
*参数        :	无
*返回        :	X坐标原始坐标值
*依赖        : 	底层宏定义
*作者        :	cp1300@139.com
*时间        :	20121006
*最后修改时间:		20121006
*说明        :	读取的是ADC转换寄存器0
* 				需要先设置ADC模式
*************************************************************************************************************************/
u16 ADC_ReadX(void)
{
	ADC_Start();		//开始一次ADC转换
	ADC_Wait();			//等待转换完成
	return ADC_ReadData0();
}


/*************************************************************************************************************************
*函数        :	u16 ADC_ReadY(void)
*功能        :	读取Y坐标
*参数        :	无
*返回        :	Y坐标原始坐标值
*依赖        : 	底层宏定义
*作者        :	cp1300@139.com
*时间        :	20121006
*最后修改时间:		20121006
*说明        :	读取的是ADC转换寄存器1
* 				需要先设置ADC模式
*************************************************************************************************************************/
u16 ADC_ReadY(void)
{
	ADC_Start();		//开始一次ADC转换
	ADC_Wait();			//等待转换完成
	return ADC_ReadData1();
}


/*************************************************************************************************************************
*函数        :	u8 Get_TouchState(void)
*功能        :	获取触摸状态
*参数        :	无
*返回        :	1:笔抬起;0:笔按下
*依赖        : 	底层宏定义
*作者        :	cp1300@139.com
*时间        :	20120315
*最后修改时间:	20120315
*说明        :	通过读取ADCDAT1的BIT15来确定状态
*************************************************************************************************************************/
u8 Get_TouchState(void)
{
	return((ADC-&gt;DAT1 &amp; BIT15) ? TOUCH_UP : TOUCH_DOWN);
}







//触摸屏中断服务函数
void __irq Isr_Touch(void)
{
	TOUCH_ClearInt();			//清除触摸屏中断标志
	VICInterruptEnd();			//中断结束
}



</pre><br>
adc.h
<p></p>
<p></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 372px; top: 4304px; width: 18px; height: 18px; z-index: 99;"><embed id="ZeroClipboardMovie_2" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="18" height="18" name="ZeroClipboardMovie_2" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=2&amp;width=18&amp;height=18" wmode="transparent"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="comment">/*************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;文件名:&nbsp;ADC.h</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;功能:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S3C6410&nbsp;触摸屏ADC底层驱动函数</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;作者:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;陈鹏</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;创建时间:&nbsp;&nbsp;&nbsp;&nbsp;2012年3月12日21:05</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;最后修改时间:2012年3月12日</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;详细:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;触摸屏驱动以及相关ADC驱动</span>&nbsp;</span></li><li class=""><span><span class="comment">*************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#ifndef&nbsp;_ADC_H_</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;_ADC_H_</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//按键状态&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;TOUCH_DOWN&nbsp;0</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;TOUCH_UP&nbsp;&nbsp;&nbsp;1</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;TOUCH_Posedge&nbsp;0x01//笔抬起事件</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;TOUCH_Negedge&nbsp;0x02//笔按下事件</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//ADC采样模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;COMMON_AD_MODER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;//普通的AD转换模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ASUNDER_X_MODER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;//分离的X采样模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ASUNDER_Y_MODER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;//分离的Y采样模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;AUTO_XY_MODER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;//自动的X,Y采样模式//不知道为何不准,只能用分离的X,Y扫描模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;INT_AD_MODER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;//等待中断的采样模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;STANDBY_AD_MODER&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;//掉电模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//ADC通道选择</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADC_CH_AIN0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADC_CH_AIN1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADC_CH_AIN2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADC_CH_AIN3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADC_CH_YM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADC_CH_YP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADC_CH_XM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADC_CH_XP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//读取转换寄存器0</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ADC_ReadData0()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(ADC-&gt;DAT0&amp;0xfff)</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADC_ReadData1()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(ADC-&gt;DAT1&amp;0xfff)</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//相关函数</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;ADC_Init(</span><span class="keyword">void</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//初始化ADC</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;SetADC_Channel(u8&nbsp;ch);&nbsp;</span><span class="comment">//ADC通道选择</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;ADC_SetMode(u8&nbsp;Mode);&nbsp;&nbsp;</span><span class="comment">//ADC工作模式设置</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>u8&nbsp;Get_TouchState(<span class="keyword">void</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//获取触摸笔状态</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>u16&nbsp;ADC_ReadX(<span class="keyword">void</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//读取X坐标</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>u16&nbsp;ADC_ReadY(<span class="keyword">void</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//读取Y坐标</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//使能笔抬起中断</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_UD_SEN&nbsp;(u8&nbsp;EN)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~BIT8;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//笔向下中断</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(EN&nbsp;==&nbsp;ENABLE)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;BIT8;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//YM接GMD无效,接HZ</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_YM_HZ(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~BIT7;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//YM接GMD有效,接GND</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_YM_GND(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;BIT7;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//YP接VDD无效,接HZ</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_YP_HZ(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;BIT6;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//YP接VDD有效,接VDDA</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_YP_VDD(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~BIT6;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//XM接GMD无效,接HZ</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_XM_HZ(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~BIT5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//XM接GMD有效,接GND</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_XM_GND(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;BIT5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//XP接VDD无效,接HZ</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_XP_HZ(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;BIT4;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//XP接VDD有效,接VDDA</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADCTSC_XP_VDD(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~BIT4;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//正常ADC转换模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;Normal_ADC_Mode(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~BIT2;&nbsp;&nbsp;&nbsp;<span class="comment">//正常的ADC转换</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//待机模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;StandbyMode(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;CON&nbsp;|=&nbsp;BIT2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//自动X,Y转换</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;AUTO_XYPosition(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~(BIT0+BIT1);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;BIT2;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//自动X,Y转换</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//X,Y手动测量模式,没有运行模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;NO_OpeMode(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~(BIT0+BIT1);&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//X,Y手动测量模式,X坐标转换模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;X_PosMode(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;NO_OpeMode();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除设置</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;1;&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//X,Y手动测量模式,Y坐标转换模式</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;Y_PosMode(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;NO_OpeMode();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除设置</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;2;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//X,Y手动测量模式,等待中断模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;INT_WaitingMode(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;NO_OpeMode();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除设置</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;3;&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//XP上拉启动</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;XP_UP_ENABLE(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;&amp;=&nbsp;~BIT3;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//XP上拉禁止</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;XP_UP_DISABLE(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;TSC&nbsp;|=&nbsp;BIT3;&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//清除ADC唤醒中断</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADC_ClearInt(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;CLRINT&nbsp;=&nbsp;0xffffffff;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//写入任何值清除中断标志</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//清除触摸屏中断中断</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;TOUCH_ClearInt(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;UPDN&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除ADC的触摸屏UP-DOWN寄存器</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;CLRINTPNDNUP&nbsp;=&nbsp;0xffffffff;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//写入任何值清除中断标志</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//开始一次ADC转换</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADC_Start(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC-&gt;CON&nbsp;|=&nbsp;BIT0;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//开始ADC转换</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//等待ADC转换完成</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>__inline&nbsp;<span class="keyword">void</span><span>&nbsp;ADC_Wait(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>(!(ADC-&gt;CON&nbsp;&amp;&nbsp;BIT15));&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#endif</span><span>&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="cpp" style="display: none;">/*************************************************************************************************************
 * 文件名:	ADC.h
 * 功能:		S3C6410 触摸屏ADC底层驱动函数
 * 作者:		陈鹏
 * 创建时间:	2012年3月12日21:05
 * 最后修改时间:2012年3月12日
 * 详细:		触摸屏驱动以及相关ADC驱动
*************************************************************************************************************/

#ifndef	_ADC_H_
#define _ADC_H_

//按键状态	 
#define TOUCH_DOWN 0
#define TOUCH_UP   1
#define TOUCH_Posedge 0x01//笔抬起事件
#define TOUCH_Negedge 0x02//笔按下事件

//ADC采样模式
#define COMMON_AD_MODER		0	//普通的AD转换模式
#define ASUNDER_X_MODER		1	//分离的X采样模式
#define ASUNDER_Y_MODER		2	//分离的Y采样模式
#define AUTO_XY_MODER		3	//自动的X,Y采样模式//不知道为何不准,只能用分离的X,Y扫描模式
#define INT_AD_MODER		4	//等待中断的采样模式
#define STANDBY_AD_MODER	5	//掉电模式


//ADC通道选择
#define ADC_CH_AIN0		0
#define ADC_CH_AIN1		1
#define ADC_CH_AIN2		2
#define ADC_CH_AIN3		3
#define ADC_CH_YM		4
#define ADC_CH_YP		5
#define ADC_CH_XM		6
#define ADC_CH_XP		7


//读取转换寄存器0
#define ADC_ReadData0()		(ADC-&gt;DAT0&amp;0xfff)
#define ADC_ReadData1()		(ADC-&gt;DAT1&amp;0xfff)

//相关函数
void ADC_Init(void);		//初始化ADC
void SetADC_Channel(u8 ch);	//ADC通道选择
void ADC_SetMode(u8 Mode);	//ADC工作模式设置
u8 Get_TouchState(void);	//获取触摸笔状态
u16 ADC_ReadX(void);		//读取X坐标
u16 ADC_ReadY(void);		//读取Y坐标



//使能笔抬起中断
__inline void ADCTSC_UD_SEN (u8 EN)
{
	ADC-&gt;TSC &amp;= ~BIT8;			//笔向下中断
	if(EN == ENABLE)
		ADC-&gt;TSC |= BIT8;
}



//YM接GMD无效,接HZ
__inline void ADCTSC_YM_HZ(void)
{
	ADC-&gt;TSC &amp;= ~BIT7;		
}

//YM接GMD有效,接GND
__inline void ADCTSC_YM_GND(void)
{
	ADC-&gt;TSC |= BIT7;		
}


//YP接VDD无效,接HZ
__inline void ADCTSC_YP_HZ(void)
{
	ADC-&gt;TSC |= BIT6;		
}

//YP接VDD有效,接VDDA
__inline void ADCTSC_YP_VDD(void)
{
	ADC-&gt;TSC &amp;= ~BIT6;		
}


//XM接GMD无效,接HZ
__inline void ADCTSC_XM_HZ(void)
{
	ADC-&gt;TSC &amp;= ~BIT5;		
}

//XM接GMD有效,接GND
__inline void ADCTSC_XM_GND(void)
{
	ADC-&gt;TSC |= BIT5;		
}


//XP接VDD无效,接HZ
__inline void ADCTSC_XP_HZ(void)
{
	ADC-&gt;TSC |= BIT4;		
}

//XP接VDD有效,接VDDA
__inline void ADCTSC_XP_VDD(void)
{
	ADC-&gt;TSC &amp;= ~BIT4;		
}


//正常ADC转换模式
__inline void Normal_ADC_Mode(void)
{
	ADC-&gt;TSC &amp;= ~BIT2;	//正常的ADC转换
}

//待机模式
__inline void StandbyMode(void)
{
	ADC-&gt;CON |= BIT2;	
}


//自动X,Y转换
__inline void AUTO_XYPosition(void)
{
	ADC-&gt;TSC &amp;= ~(BIT0+BIT1);
	ADC-&gt;TSC |= BIT2;	//自动X,Y转换
}

//X,Y手动测量模式,没有运行模式
__inline void NO_OpeMode(void)
{
	ADC-&gt;TSC &amp;= ~(BIT0+BIT1);
}

//X,Y手动测量模式,X坐标转换模式
__inline void X_PosMode(void)
{
	NO_OpeMode();			//清除设置
	ADC-&gt;TSC |= 1;
}

//X,Y手动测量模式,Y坐标转换模式
__inline void Y_PosMode(void)
{
	NO_OpeMode();			//清除设置
	ADC-&gt;TSC |= 2;
}

//X,Y手动测量模式,等待中断模式
__inline void INT_WaitingMode(void)
{
	NO_OpeMode();			//清除设置
	ADC-&gt;TSC |= 3;
}


//XP上拉启动
__inline void XP_UP_ENABLE(void)
{
	ADC-&gt;TSC &amp;= ~BIT3;
}


//XP上拉禁止
__inline void XP_UP_DISABLE(void)
{
	ADC-&gt;TSC |= BIT3;
}


//清除ADC唤醒中断
__inline void ADC_ClearInt(void)
{
	ADC-&gt;CLRINT = 0xffffffff;		//写入任何值清除中断标志
}


//清除触摸屏中断中断
__inline void TOUCH_ClearInt(void)
{
	ADC-&gt;UPDN = 0;						//清除ADC的触摸屏UP-DOWN寄存器
	ADC-&gt;CLRINTPNDNUP = 0xffffffff;		//写入任何值清除中断标志
}


//开始一次ADC转换
__inline void ADC_Start(void)
{
	ADC-&gt;CON |= BIT0;	//开始ADC转换
}


//等待ADC转换完成
__inline void ADC_Wait(void)
{
	while(!(ADC-&gt;CON &amp; BIT15));
}


#endif
</pre><br>
touch.c
<p></p>
<p></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 372px; top: 8133px; width: 18px; height: 18px; z-index: 99;"><embed id="ZeroClipboardMovie_3" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="18" height="18" name="ZeroClipboardMovie_3" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=3&amp;width=18&amp;height=18" wmode="transparent"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="comment">/*************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;文件名:&nbsp;Touch.c</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;功能:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S3C6410&nbsp;电阻触摸屏驱动</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;作者:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;创建时间:&nbsp;&nbsp;&nbsp;&nbsp;2012年10月6日17:31</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;最后修改时间:2012年10月6日</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;详细:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要底层的ADC支持</span>&nbsp;</span></li><li class=""><span><span class="comment">*************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"system.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"adc.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"touch.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>Pen_Holder&nbsp;Pen_Point;<span class="comment">//定义笔实体</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//开启触摸屏校准,需要其它支持</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;_TOUCH_ADJUST&nbsp;1</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#if&nbsp;_TOUCH_ADJUST</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;TOUCH_Adjust(</span><span class="keyword">void</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//触摸屏校准</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#endif&nbsp;//_TOUCH_ADJUST</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">*函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;TOUCH_Init(FunctionalState&nbsp;EnableInt)</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*功能&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;触摸屏初始始化</span>&nbsp;</span></li><li class=""><span><span class="comment">*参数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;EnableInt:笔中断使能</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*返回&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*依赖&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;底层宏定义</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class=""><span><span class="comment">*时间&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;20120313</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*最后修改时间:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20121006</span>&nbsp;</span></li><li class=""><span><span class="comment">*说明&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;触摸屏初始始化</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;TOUCH_Init(FunctionalState&nbsp;EnableInt)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_Init();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//初始化ADC</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;TOUCH_ClearInt();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除触摸屏中断标志</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_ClearInt();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//清除ADC中断</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_SetMode(INT_AD_MODER);&nbsp;&nbsp;<span class="comment">//等待中断模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ADCTSC_UD_SEN(DISABLE);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//设置为按下中断</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(EnableInt&nbsp;==&nbsp;ENABLE)&nbsp;</span><span class="comment">//开启笔中断</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Set_IsrAddr(INT_PENDNUP,(u32)Isr_Touch);&nbsp;&nbsp;//设置中断矢量入口</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Set_IntEnable(INT_PENDNUP,ENABLE);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//开启触摸屏按下</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#if&nbsp;_TOUCH_ADJUST</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;TOUCH_Adjust();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//触摸屏校准</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#endif&nbsp;//_TOUCH_ADJUST</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;函数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;u16&nbsp;ADS_Read_XY(u16(*ADC_ReadXY)(void))</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;功能&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;使用冒泡法读取一次坐标</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;参数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;ADC_ReadXY:X或Y坐标读取函数</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;返回&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;转换结果</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;依赖&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;ADC</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;作者&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;时间&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;20121006</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;最后修改时间&nbsp;:&nbsp;20121006</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;连续读取READ_TIMES次数据,对这些数据升序排列,</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然后去掉最低和最高LOST_VAL个数,取平均值&nbsp;</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;READ_TIMES&nbsp;15&nbsp;//读取次数</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;LOST_VAL&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;//丢弃值</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>u16&nbsp;ADS_Read_XY(u16(*ADC_ReadXY)(<span class="keyword">void</span><span>))&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;i,&nbsp;j;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;buff[READ_TIMES];&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;sum=0;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;temp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>(i&nbsp;=&nbsp;0;i&nbsp;&lt;&nbsp;READ_TIMES;i&nbsp;++)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buff[i]&nbsp;=&nbsp;ADC_ReadXY();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>(i&nbsp;=&nbsp;0;i&nbsp;&lt;&nbsp;READ_TIMES&nbsp;-&nbsp;1;i&nbsp;++)</span><span class="comment">//排序</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>(j&nbsp;=&nbsp;i&nbsp;+&nbsp;1;j&nbsp;&lt;&nbsp;READ_TIMES;j&nbsp;++)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(buff[i]&nbsp;&gt;&nbsp;buff[j])</span><span class="comment">//升序排列</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;buff[i];&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buff[i]&nbsp;=&nbsp;buff[j];&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buff[j]&nbsp;=&nbsp;temp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;=&nbsp;0;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>(i&nbsp;=&nbsp;LOST_VAL;i&nbsp;&lt;&nbsp;READ_TIMES&nbsp;-&nbsp;LOST_VAL;i&nbsp;++)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;+=&nbsp;buff[i];&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;sum&nbsp;/&nbsp;(READ_TIMES&nbsp;-&nbsp;2&nbsp;*&nbsp;LOST_VAL);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;temp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;函数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;u8&nbsp;Read_ADS(u16&nbsp;*x,u16&nbsp;*y)</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;功能&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;带滤波的读取X,Y坐标</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;参数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;X,Y坐标值缓冲区指针</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;返回&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;1:转换结果有效;0:转换结果无效</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;依赖&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;XPT2046底层函数</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;作者&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;时间&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;20120914</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;最后修改时间&nbsp;:&nbsp;20120914</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;带滤波的坐标读取</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最小值不能少于MINI_ADC_DATA.</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;MINI_ADC_DATA&nbsp;&nbsp;&nbsp;100</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>u8&nbsp;Read_ADS(u16&nbsp;*x,u16&nbsp;*y)&nbsp;&nbsp;</span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;xtemp,&nbsp;ytemp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_SetMode(ASUNDER_X_MODER);&nbsp;&nbsp;&nbsp;<span class="comment">//设置ADC为分离的X采样模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;xtemp&nbsp;=&nbsp;ADS_Read_XY(ADC_ReadX);&nbsp;<span class="comment">//读取X坐标</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_SetMode(ASUNDER_Y_MODER);&nbsp;&nbsp;&nbsp;<span class="comment">//设置ADC为分离的Y采样模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ytemp&nbsp;=&nbsp;ADS_Read_XY(ADC_ReadY);&nbsp;<span class="comment">//读取Y坐标</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ADC_SetMode(INT_AD_MODER);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//设置ADC为等待中断模式</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(xtemp&nbsp;&lt;&nbsp;MINI_ADC_DATA&nbsp;||&nbsp;ytemp&nbsp;&lt;&nbsp;MINI_ADC_DATA)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;0;</span><span class="comment">//读数失败</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;*x&nbsp;=&nbsp;xtemp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;*y&nbsp;=&nbsp;ytemp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;1;</span><span class="comment">//读数成功</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;函数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;u8&nbsp;Read_ADS2(u16&nbsp;*x,u16&nbsp;*y)&nbsp;</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;功能&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;连续读取2次有效的AD值</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;参数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;X,Y坐标值缓冲区指针</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;返回&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;1:转换结果有效;0:转换结果无效</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;依赖&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;u8&nbsp;Read_ADS(u16&nbsp;*x,u16&nbsp;*y)</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;作者&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;时间&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;20120914</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;最后修改时间&nbsp;:&nbsp;20120914</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;连续读取2次有效的AD值,且这两次的偏差不能超过ERR_RANGE</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;满足条件,则认为读数正确,否则读数错误.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该函数能大大提高准确度</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ERR_RANGE&nbsp;50&nbsp;&nbsp;&nbsp;&nbsp;//误差范围&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>u8&nbsp;Read_ADS2(u16&nbsp;*x,u16&nbsp;*y)&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;x1,y1;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;x2,y2;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;flag;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;flag&nbsp;=&nbsp;Read_ADS(&amp;x1,&amp;y1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(flag&nbsp;==&nbsp;0)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>(0);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;flag&nbsp;=&nbsp;Read_ADS(&amp;x2,&amp;y2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(flag&nbsp;==&nbsp;0)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>(0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(((x2&nbsp;&lt;=&nbsp;x1&nbsp;&amp;&amp;&nbsp;x1&nbsp;&lt;&nbsp;x2&nbsp;+&nbsp;ERR_RANGE)&nbsp;||&nbsp;(x1&nbsp;&lt;=&nbsp;x2&nbsp;&amp;&amp;&nbsp;x2&nbsp;&lt;&nbsp;x1&nbsp;+&nbsp;ERR_RANGE))&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp;&nbsp;((y2&nbsp;&lt;=&nbsp;y1&nbsp;&amp;&amp;&nbsp;y1&nbsp;&lt;&nbsp;y2&nbsp;+&nbsp;ERR_RANGE)&nbsp;||&nbsp;(y1&nbsp;&lt;=&nbsp;y2&nbsp;&amp;&amp;&nbsp;y2&nbsp;&lt;&nbsp;y1&nbsp;+&nbsp;ERR_RANGE)))&nbsp;&nbsp;&nbsp;<span class="comment">//前后两次采样在+-ERR_RANGE内</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x&nbsp;=&nbsp;(x1&nbsp;+&nbsp;x2)&nbsp;/&nbsp;2;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*y&nbsp;=&nbsp;(y1&nbsp;+&nbsp;y2)&nbsp;/&nbsp;2;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;1;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;函数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;u8&nbsp;TOUCH_ReadOneTP(void)</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;功能&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;读取一次原始坐标</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;参数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;返回&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;1:转换结果有效;0:转换结果无效</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;依赖&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;u8&nbsp;Read_ADS2(u16&nbsp;*x,u16&nbsp;*y)&nbsp;</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;作者&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;时间&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;20120914</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;最后修改时间&nbsp;:&nbsp;20120914</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;调用Read_ADS2函数进行读取,如果Read_ADS2读取失败,重复读取,最多读取MAX_READ_ADS次</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果失败,将返回0,注意返回1代表结果有效</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;转换的结果存放在结构体Pen_Holder,的x0,y0中</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;&nbsp;MAX_READ_ADS&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;//最大重试次数</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>u8&nbsp;TOUCH_ReadOneTP(<span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;i;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;x,y;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>(i&nbsp;=&nbsp;MAX_READ_ADS;i&nbsp;!=&nbsp;0;i&nbsp;--)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(Read_ADS2(&amp;x,&amp;y))&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pen_Point.x0&nbsp;=&nbsp;x;&nbsp;&nbsp;&nbsp;<span class="comment">//转换有效,存储结果</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pen_Point.y0&nbsp;=&nbsp;y;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//返回成功</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//返回失败</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;函数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;void&nbsp;TOUCH_ConvertPos(void)</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;功能&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;采集并转换触摸坐标</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;参数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;返回&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;依赖&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;LCD.C,触摸屏ADC底层</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;作者&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;时间&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;20120914</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;最后修改时间&nbsp;:&nbsp;20121006</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;根据触摸屏的校准参数来决定转换后的结果,保存在x,y中</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要先进行触摸校准</span>&nbsp;</span></li><li class=""><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;TOUCH_ConvertPos(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(TOUCH_ReadOneTP())&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pen_Point.x&nbsp;=&nbsp;Pen_Point.xfac&nbsp;*&nbsp;Pen_Point.x0&nbsp;+&nbsp;Pen_Point.xoff;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pen_Point.y&nbsp;=&nbsp;Pen_Point.yfac&nbsp;*&nbsp;Pen_Point.y0&nbsp;+&nbsp;Pen_Point.yoff;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//触摸屏校准相关</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="comment">/////////////////////////////////////////////////////////////////////////////////////////////////////////////</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#if&nbsp;_TOUCH_ADJUST</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"TFT_LCD.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"stdlib.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"math.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"delay.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;函数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;void&nbsp;Drow_Touch_Point(u16&nbsp;x,u16&nbsp;y)</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;功能&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;画一个触摸点,用于校准</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;参数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;x,y:触摸点中心位置</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;返回&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;依赖&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;LCD.C</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;作者&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;时间&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;20120914</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;最后修改时间&nbsp;:&nbsp;20120914</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;会调用LCD.C中的画圆,画线,画矩形等函数</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;Drow_Touch_Point(u16&nbsp;x,u16&nbsp;y)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Draw_Circle(x,y,10,0xf0f0);<span class="comment">//画圆</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Draw_Circle(x,y,3,0xf0f0);<span class="comment">//画圆</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;LCD_DrawLine(x&nbsp;-&nbsp;15,&nbsp;y,&nbsp;x&nbsp;+&nbsp;15,&nbsp;y,0xf0f0);<span class="comment">//画线</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;LCD_DrawLine(x,&nbsp;y&nbsp;-&nbsp;15,&nbsp;x,&nbsp;y&nbsp;+&nbsp;15,0xf0f0);<span class="comment">//画线&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;LCD_DrawRectangle(x&nbsp;-&nbsp;10,y&nbsp;-&nbsp;10,x&nbsp;+&nbsp;10,y&nbsp;+&nbsp;10,0xf0f0);<span class="comment">//画矩形</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*************************************************************************************************************************</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;函数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;void&nbsp;TOUCH_Adjust(void)</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;功能&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;进行触摸屏校准</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;参数&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;返回&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;无</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;依赖&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;LCD.C,触摸屏ADC底层</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;作者&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;时间&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;20120914</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;最后修改时间&nbsp;:&nbsp;20120914</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;说明&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;得到四个校准值</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(20,20)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LCD_XSIZE-20,20)</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;</span>&nbsp;</span></li><li class=""><span><span class="comment">*&nbsp;</span>&nbsp;</span></li><li class="alt"><span><span class="comment">*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(20,LCD_YSIZE-20)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(LCD_XSIZE-20,LCD_YSIZE-20)</span>&nbsp;</span></li><li class=""><span><span class="comment">*************************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;TOUCH_Adjust(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;pos_temp[4][2];<span class="comment">//坐标缓存值</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;&nbsp;cnt=0;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;d1,d2;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u32&nbsp;tem1,tem2;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">float</span><span>&nbsp;fac;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;cnt=0;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Drow_Touch_Point(20,20);<span class="comment">//画点1&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Pen_Point.xfac=0;//xfac用来标记是否校准过,所以校准之前必须清掉!以免错误&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>(1)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(GetPenStartus()&nbsp;==&nbsp;TOUCH_DOWN)</span><span class="comment">//按键按下了</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(TOUCH_ReadOneTP())</span><span class="comment">//得到单次按键值</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos_temp[cnt][0]=Pen_Point.x0;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos_temp[cnt][1]=Pen_Point.y0;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt++;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>(GetPenStartus()&nbsp;==&nbsp;TOUCH_DOWN);&nbsp;&nbsp;&nbsp;</span><span class="comment">//等待按键抬起&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">switch</span><span>(cnt)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;1:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Drow_Touch_Point(LCD_XSIZE-20,20);<span class="comment">//画点2</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;2:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Drow_Touch_Point(20,LCD_YSIZE-20);<span class="comment">//画点3</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;3:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Drow_Touch_Point(LCD_XSIZE-20,LCD_YSIZE-20);<span class="comment">//画点4</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;4:&nbsp;&nbsp;</span><span class="comment">//全部四个点已经得到</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//对边相等</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1=abs(pos_temp[0][0]-pos_temp[1][0]);<span class="comment">//x1-x2</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2=abs(pos_temp[0][1]-pos_temp[1][1]);<span class="comment">//y1-y2</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1*=tem1;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2*=tem2;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d1=sqrt(tem1+tem2);<span class="comment">//得到1,2的距离</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1=abs(pos_temp[2][0]-pos_temp[3][0]);<span class="comment">//x3-x4</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2=abs(pos_temp[2][1]-pos_temp[3][1]);<span class="comment">//y3-y4</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1*=tem1;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2*=tem2;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d2=sqrt(tem1+tem2);<span class="comment">//得到3,4的距离</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fac=(<span class="datatypes">float</span><span>)d1/d2;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(fac&lt;0.95||fac&gt;1.05||d1==0||d2==0)</span><span class="comment">//不合格</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt=0;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Drow_Touch_Point(20,20);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">continue</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1=abs(pos_temp[0][0]-pos_temp[2][0]);<span class="comment">//x1-x3</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2=abs(pos_temp[0][1]-pos_temp[2][1]);<span class="comment">//y1-y3</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1*=tem1;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2*=tem2;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d1=sqrt(tem1+tem2);<span class="comment">//得到1,3的距离</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1=abs(pos_temp[1][0]-pos_temp[3][0]);<span class="comment">//x2-x4</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2=abs(pos_temp[1][1]-pos_temp[3][1]);<span class="comment">//y2-y4</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1*=tem1;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2*=tem2;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d2=sqrt(tem1+tem2);<span class="comment">//得到2,4的距离</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fac=(<span class="datatypes">float</span><span>)d1/d2;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(fac&lt;0.95||fac&gt;1.05)</span><span class="comment">//不合格</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt=0;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Drow_Touch_Point(20,20);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">continue</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="comment">//正确了</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//对角线相等</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1=abs(pos_temp[1][0]-pos_temp[2][0]);<span class="comment">//x1-x3</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2=abs(pos_temp[1][1]-pos_temp[2][1]);<span class="comment">//y1-y3</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1*=tem1;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2*=tem2;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d1=sqrt(tem1+tem2);<span class="comment">//得到1,4的距离</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1=abs(pos_temp[0][0]-pos_temp[3][0]);<span class="comment">//x2-x4</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2=abs(pos_temp[0][1]-pos_temp[3][1]);<span class="comment">//y2-y4</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem1*=tem1;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tem2*=tem2;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d2=sqrt(tem1+tem2);<span class="comment">//得到2,3的距离</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fac=(<span class="datatypes">float</span><span>)d1/d2;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(fac&lt;0.95||fac&gt;1.05)</span><span class="comment">//不合格</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt=0;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Drow_Touch_Point(20,20);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">continue</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="comment">//正确了</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//计算结果</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pen_Point.xfac=(<span class="datatypes">float</span><span>)(LCD_XSIZE-40)/(pos_temp[1][0]-pos_temp[0][0]);</span><span class="comment">//得到xfac&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pen_Point.xoff=(LCD_XSIZE-Pen_Point.xfac*(pos_temp[1][0]+pos_temp[0][0]))/2;<span class="comment">//得到xoff</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pen_Point.yfac=(<span class="datatypes">float</span><span>)(LCD_YSIZE-40)/(pos_temp[2][1]-pos_temp[0][1]);</span><span class="comment">//得到yfac</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pen_Point.yoff=(LCD_YSIZE-Pen_Point.yfac*(pos_temp[2][1]+pos_temp[0][1]))/2;<span class="comment">//得到yoff&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Wire_Touch();&nbsp;//存储校准结果</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Show_Char(35,LCD_YSIZE/2,<span class="string">"Touch&nbsp;Screen&nbsp;Adjust&nbsp;OK!"</span><span>,0xf800,0xffff,0x80);&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delay_MS(1000);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD_ClearScreen(0xffff);<span class="comment">//清屏&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>;</span><span class="comment">//校正完成&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#endif&nbsp;//_TOUCH_ADJUST</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">///////////////////////////////////////////////////////////////////////////////////////////////////////////////</span><span>&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="cpp" style="display: none;">/*************************************************************************************************************
 * 文件名:	Touch.c
 * 功能:		S3C6410 电阻触摸屏驱动
 * 作者:		cp1300@139.com
 * 创建时间:	2012年10月6日17:31
 * 最后修改时间:2012年10月6日
 * 详细:		需要底层的ADC支持
*************************************************************************************************************/
#include "system.h"
#include "adc.h"
#include "touch.h"


Pen_Holder Pen_Point;//定义笔实体



//开启触摸屏校准,需要其它支持
#define _TOUCH_ADJUST 1

#if _TOUCH_ADJUST
	void TOUCH_Adjust(void);	//触摸屏校准
#endif //_TOUCH_ADJUST

/*************************************************************************************************************************
*函数        :	void TOUCH_Init(FunctionalState EnableInt)
*功能        :	触摸屏初始始化
*参数        :	EnableInt:笔中断使能
*返回        :	无
*依赖        : 	底层宏定义
*作者        :	cp1300@139.com
*时间        :	20120313
*最后修改时间:		20121006
*说明        :	触摸屏初始始化
*************************************************************************************************************************/
void TOUCH_Init(FunctionalState EnableInt)
{
	ADC_Init();					//初始化ADC
	TOUCH_ClearInt();			//清除触摸屏中断标志
	ADC_ClearInt();				//清除ADC中断
	ADC_SetMode(INT_AD_MODER);	//等待中断模式
	ADCTSC_UD_SEN(DISABLE);		//设置为按下中断
	if(EnableInt == ENABLE)	//开启笔中断
	{
		//Set_IsrAddr(INT_PENDNUP,(u32)Isr_Touch);	//设置中断矢量入口
		//Set_IntEnable(INT_PENDNUP,ENABLE);			//开启触摸屏按下
	}
#if _TOUCH_ADJUST
	TOUCH_Adjust();				//触摸屏校准
#endif //_TOUCH_ADJUST
}




/*************************************************************************************************************************
* 函数	:	u16 ADS_Read_XY(u16(*ADC_ReadXY)(void))
* 功能	:	使用冒泡法读取一次坐标
* 参数	:	ADC_ReadXY:X或Y坐标读取函数
* 返回	:	转换结果
* 依赖	:	ADC
* 作者	:	cp1300@139.com
* 时间	:	20121006
* 最后修改时间 : 20121006
* 说明	: 	连续读取READ_TIMES次数据,对这些数据升序排列,
			然后去掉最低和最高LOST_VAL个数,取平均值 
*************************************************************************************************************************/
#define READ_TIMES 15 //读取次数
#define LOST_VAL 5	  //丢弃值
u16 ADS_Read_XY(u16(*ADC_ReadXY)(void))
{
	u16 i, j;
	u16 buff[READ_TIMES];
	u16 sum=0;
	u16 temp;

	for(i = 0;i &lt; READ_TIMES;i ++)
	{				 
		buff[i] = ADC_ReadXY();	    
	}				    
	for(i = 0;i &lt; READ_TIMES - 1;i ++)//排序
	{
		for(j = i + 1;j &lt; READ_TIMES;j ++)
		{
			if(buff[i] &gt; buff[j])//升序排列
			{
				temp = buff[i];
				buff[i] = buff[j];
				buff[j] = temp;
			}
		}
	}	  
	sum = 0;
	for(i = LOST_VAL;i &lt; READ_TIMES - LOST_VAL;i ++)
		sum += buff[i];
	temp = sum / (READ_TIMES - 2 * LOST_VAL);

	return temp;   
} 


/*************************************************************************************************************************
* 函数	:	u8 Read_ADS(u16 *x,u16 *y)
* 功能	:	带滤波的读取X,Y坐标
* 参数	:	X,Y坐标值缓冲区指针
* 返回	:	1:转换结果有效;0:转换结果无效
* 依赖	:	XPT2046底层函数
* 作者	:	cp1300@139.com
* 时间	:	20120914
* 最后修改时间 : 20120914
* 说明	: 	带滤波的坐标读取
			最小值不能少于MINI_ADC_DATA.
*************************************************************************************************************************/
#define MINI_ADC_DATA	100
u8 Read_ADS(u16 *x,u16 *y)
{
	u16 xtemp, ytemp;
	
	ADC_SetMode(ASUNDER_X_MODER);	//设置ADC为分离的X采样模式
	xtemp = ADS_Read_XY(ADC_ReadX);	//读取X坐标
	ADC_SetMode(ASUNDER_Y_MODER);	//设置ADC为分离的Y采样模式
	ytemp = ADS_Read_XY(ADC_ReadY);	//读取Y坐标
	ADC_SetMode(INT_AD_MODER);		//设置ADC为等待中断模式
	if(xtemp &lt; MINI_ADC_DATA || ytemp &lt; MINI_ADC_DATA)
		return 0;//读数失败
	*x = xtemp;
	*y = ytemp;

	return 1;//读数成功
}


/*************************************************************************************************************************
* 函数	:	u8 Read_ADS2(u16 *x,u16 *y) 
* 功能	:	连续读取2次有效的AD值
* 参数	:	X,Y坐标值缓冲区指针
* 返回	:	1:转换结果有效;0:转换结果无效
* 依赖	:	u8 Read_ADS(u16 *x,u16 *y)
* 作者	:	cp1300@139.com
* 时间	:	20120914
* 最后修改时间 : 20120914
* 说明	: 	连续读取2次有效的AD值,且这两次的偏差不能超过ERR_RANGE
			满足条件,则认为读数正确,否则读数错误.	   
			该函数能大大提高准确度
*************************************************************************************************************************/
#define ERR_RANGE 50 	//误差范围 
u8 Read_ADS2(u16 *x,u16 *y) 
{
	u16 x1,y1;
 	u16 x2,y2;
 	u8 flag; 
	   
    flag = Read_ADS(&amp;x1,&amp;y1);   
    if(flag == 0)
		return(0);
    flag = Read_ADS(&amp;x2,&amp;y2);	   
    if(flag == 0)
		return(0);   
    if(((x2 &lt;= x1 &amp;&amp; x1 &lt; x2 + ERR_RANGE) || (x1 &lt;= x2 &amp;&amp; x2 &lt; x1 + ERR_RANGE))
   		 &amp;&amp; ((y2 &lt;= y1 &amp;&amp; y1 &lt; y2 + ERR_RANGE) || (y1 &lt;= y2 &amp;&amp; y2 &lt; y1 + ERR_RANGE)))	//前后两次采样在+-ERR_RANGE内
    {
        *x = (x1 + x2) / 2;
        *y = (y1 + y2) / 2;
        return 1;
    }
	else 
		return 0;	  
}


/*************************************************************************************************************************
* 函数	:	u8 TOUCH_ReadOneTP(void)
* 功能	:	读取一次原始坐标
* 参数	:	无
* 返回	:	1:转换结果有效;0:转换结果无效
* 依赖	:	u8 Read_ADS2(u16 *x,u16 *y) 
* 作者	:	cp1300@139.com
* 时间	:	20120914
* 最后修改时间 : 20120914
* 说明	: 	调用Read_ADS2函数进行读取,如果Read_ADS2读取失败,重复读取,最多读取MAX_READ_ADS次
			如果失败,将返回0,注意返回1代表结果有效
			转换的结果存放在结构体Pen_Holder,的x0,y0中
*************************************************************************************************************************/
#define  MAX_READ_ADS	5	//最大重试次数
u8 TOUCH_ReadOneTP(void)
{
 	u8 i;
	u16 x,y;

	for(i = MAX_READ_ADS;i != 0;i --)
	{
	 	if(Read_ADS2(&amp;x,&amp;y))
		{
		 	Pen_Point.x0 = x; 	//转换有效,存储结果
			Pen_Point.y0 = y;
			return 1;			//返回成功
		}
	}

	return 0;		//返回失败
}



/*************************************************************************************************************************
* 函数	:	void TOUCH_ConvertPos(void)
* 功能	:	采集并转换触摸坐标
* 参数	:	无
* 返回	:	无
* 依赖	:	LCD.C,触摸屏ADC底层
* 作者	:	cp1300@139.com
* 时间	:	20120914
* 最后修改时间 : 20121006
* 说明	: 	根据触摸屏的校准参数来决定转换后的结果,保存在x,y中
* 			需要先进行触摸校准
*************************************************************************************************************************/
void TOUCH_ConvertPos(void)
{		 	  
	if(TOUCH_ReadOneTP())
	{
		Pen_Point.x = Pen_Point.xfac * Pen_Point.x0 + Pen_Point.xoff;
		Pen_Point.y = Pen_Point.yfac * Pen_Point.y0 + Pen_Point.yoff;  
	}
}




//触摸屏校准相关
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
#if _TOUCH_ADJUST
#include "TFT_LCD.h"
#include "stdlib.h"
#include "math.h"
#include "delay.h"

/*************************************************************************************************************************
* 函数	:	void Drow_Touch_Point(u16 x,u16 y)
* 功能	:	画一个触摸点,用于校准
* 参数	:	x,y:触摸点中心位置
* 返回	:	无
* 依赖	:	LCD.C
* 作者	:	cp1300@139.com
* 时间	:	20120914
* 最后修改时间 : 20120914
* 说明	: 	会调用LCD.C中的画圆,画线,画矩形等函数
*************************************************************************************************************************/
void Drow_Touch_Point(u16 x,u16 y)
{
	Draw_Circle(x,y,10,0xf0f0);//画圆
	Draw_Circle(x,y,3,0xf0f0);//画圆
	LCD_DrawLine(x - 15, y, x + 15, y,0xf0f0);//画线
	LCD_DrawLine(x, y - 15, x, y + 15,0xf0f0);//画线	
	LCD_DrawRectangle(x - 10,y - 10,x + 10,y + 10,0xf0f0);//画矩形
}




/*************************************************************************************************************************
* 函数	:	void TOUCH_Adjust(void)
* 功能	:	进行触摸屏校准
* 参数	:	无
* 返回	:	无
* 依赖	:	LCD.C,触摸屏ADC底层
* 作者	:	cp1300@139.com
* 时间	:	20120914
* 最后修改时间 : 20120914
* 说明	: 	得到四个校准值
* 			(20,20)						(LCD_XSIZE-20,20)
* 
* 
* 			(20,LCD_YSIZE-20)			(LCD_XSIZE-20,LCD_YSIZE-20)
*************************************************************************************************************************/
void TOUCH_Adjust(void)
{								 
	u16 pos_temp[4][2];//坐标缓存值
	u8  cnt=0;	
	u16 d1,d2;
	u32 tem1,tem2;
	float fac; 	   
	cnt=0;
					

	LCD_ClearScreen(0xffff);//清屏   
	Drow_Touch_Point(20,20);//画点1 
	//Pen_Point.xfac=0;//xfac用来标记是否校准过,所以校准之前必须清掉!以免错误	 
	while(1)
	{
		if(GetPenStartus() == TOUCH_DOWN)//按键按下了
		{
			if(TOUCH_ReadOneTP())//得到单次按键值
			{  								   
				pos_temp[cnt][0]=Pen_Point.x0;
				pos_temp[cnt][1]=Pen_Point.y0;
				cnt++;
			}
			while(GetPenStartus() == TOUCH_DOWN);	//等待按键抬起			 
			switch(cnt)
			{			   
				case 1:
					LCD_ClearScreen(0xffff);//清屏  
					Drow_Touch_Point(LCD_XSIZE-20,20);//画点2
					break;
				case 2:
					LCD_ClearScreen(0xffff);//清屏  
					Drow_Touch_Point(20,LCD_YSIZE-20);//画点3
					break;
				case 3:
					LCD_ClearScreen(0xffff);//清屏 
					Drow_Touch_Point(LCD_XSIZE-20,LCD_YSIZE-20);//画点4
					break;
				case 4:	 //全部四个点已经得到
	    		    //对边相等
					tem1=abs(pos_temp[0][0]-pos_temp[1][0]);//x1-x2
					tem2=abs(pos_temp[0][1]-pos_temp[1][1]);//y1-y2
					tem1*=tem1;
					tem2*=tem2;
					d1=sqrt(tem1+tem2);//得到1,2的距离
					
					tem1=abs(pos_temp[2][0]-pos_temp[3][0]);//x3-x4
					tem2=abs(pos_temp[2][1]-pos_temp[3][1]);//y3-y4
					tem1*=tem1;
					tem2*=tem2;
					d2=sqrt(tem1+tem2);//得到3,4的距离
					fac=(float)d1/d2;
					if(fac&lt;0.95||fac&gt;1.05||d1==0||d2==0)//不合格
					{
						cnt=0;
						LCD_ClearScreen(0xffff);//清屏  
						Drow_Touch_Point(20,20);
						continue;
					}
					tem1=abs(pos_temp[0][0]-pos_temp[2][0]);//x1-x3
					tem2=abs(pos_temp[0][1]-pos_temp[2][1]);//y1-y3
					tem1*=tem1;
					tem2*=tem2;
					d1=sqrt(tem1+tem2);//得到1,3的距离
					
					tem1=abs(pos_temp[1][0]-pos_temp[3][0]);//x2-x4
					tem2=abs(pos_temp[1][1]-pos_temp[3][1]);//y2-y4
					tem1*=tem1;
					tem2*=tem2;
					d2=sqrt(tem1+tem2);//得到2,4的距离
					fac=(float)d1/d2;
					if(fac&lt;0.95||fac&gt;1.05)//不合格
					{
						cnt=0;
						LCD_ClearScreen(0xffff);//清屏  
						Drow_Touch_Point(20,20);
						continue;
					}//正确了
								   
					//对角线相等
					tem1=abs(pos_temp[1][0]-pos_temp[2][0]);//x1-x3
					tem2=abs(pos_temp[1][1]-pos_temp[2][1]);//y1-y3
					tem1*=tem1;
					tem2*=tem2;
					d1=sqrt(tem1+tem2);//得到1,4的距离
	
					tem1=abs(pos_temp[0][0]-pos_temp[3][0]);//x2-x4
					tem2=abs(pos_temp[0][1]-pos_temp[3][1]);//y2-y4
					tem1*=tem1;
					tem2*=tem2;
					d2=sqrt(tem1+tem2);//得到2,3的距离
					fac=(float)d1/d2;
					if(fac&lt;0.95||fac&gt;1.05)//不合格
					{
						cnt=0;
						LCD_ClearScreen(0xffff);//清屏  
						Drow_Touch_Point(20,20);
						continue;
					}//正确了
					//计算结果
					Pen_Point.xfac=(float)(LCD_XSIZE-40)/(pos_temp[1][0]-pos_temp[0][0]);//得到xfac		 
					Pen_Point.xoff=(LCD_XSIZE-Pen_Point.xfac*(pos_temp[1][0]+pos_temp[0][0]))/2;//得到xoff
						  
					Pen_Point.yfac=(float)(LCD_YSIZE-40)/(pos_temp[2][1]-pos_temp[0][1]);//得到yfac
					Pen_Point.yoff=(LCD_YSIZE-Pen_Point.yfac*(pos_temp[2][1]+pos_temp[0][1]))/2;//得到yoff  
					//Wire_Touch();	//存储校准结果
					LCD_ClearScreen(0xffff);//清屏 
					Show_Char(35,LCD_YSIZE/2,"Touch Screen Adjust OK!",0xf800,0xffff,0x80);	
					Delay_MS(1000);
					LCD_ClearScreen(0xffff);//清屏    
					return;//校正完成				 
			}
		}
	} 
}	


#endif //_TOUCH_ADJUST
///////////////////////////////////////////////////////////////////////////////////////////////////////////////

</pre><br>
touch.h
<p></p>
<p></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 372px; top: 15328px; width: 18px; height: 18px; z-index: 99;"><embed id="ZeroClipboardMovie_4" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="18" height="18" name="ZeroClipboardMovie_4" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=4&amp;width=18&amp;height=18" wmode="transparent"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="comment">/*************************************************************************************************************</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;文件名:&nbsp;Touch.h</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;功能:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S3C6410&nbsp;电阻触摸屏驱动</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;作者:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cp1300@139.com</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;创建时间:&nbsp;&nbsp;&nbsp;&nbsp;2012年10月6日17:31</span>&nbsp;</span></li><li class=""><span><span class="comment">&nbsp;*&nbsp;最后修改时间:2012年10月6日</span>&nbsp;</span></li><li class="alt"><span><span class="comment">&nbsp;*&nbsp;详细:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要底层的ADC支持</span>&nbsp;</span></li><li class=""><span><span class="comment">*************************************************************************************************************/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#ifndef&nbsp;TOUCH_H_</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;TOUCH_H_</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#include&nbsp;"adc.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#ifndef&nbsp;TOUCH_DOWN</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">&nbsp;&nbsp;&nbsp;&nbsp;#define&nbsp;TOUCH_DOWN&nbsp;0</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#endif&nbsp;//TOUCH_DOWN</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#ifndef&nbsp;TOUCH_UP</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">&nbsp;&nbsp;&nbsp;&nbsp;#define&nbsp;TOUCH_UP&nbsp;1</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#endif&nbsp;//TOUCH_UP</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//笔杆结构体</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">typedef</span><span>&nbsp;</span><span class="keyword">struct</span><span>&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;x0;<span class="comment">//原始坐标</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;y0;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;x;&nbsp;<span class="comment">//最终/暂存坐标</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;y;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;&nbsp;Touch_Sta;<span class="comment">//笔的状态&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">//触摸屏校准参数</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">float</span><span>&nbsp;xfac;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">float</span><span>&nbsp;yfac;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">short</span><span>&nbsp;xoff;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">short</span><span>&nbsp;yoff;&nbsp;&nbsp;</span></span></li><li class=""><span>}Pen_Holder;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">extern</span><span>&nbsp;Pen_Holder&nbsp;Pen_Point;</span><span class="comment">//定义一个笔杆的结构变量</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;TOUCH_Init(FunctionalState&nbsp;EnableInt);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//触摸屏初始化函数</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>u8&nbsp;TOUCH_ReadOneTP(<span class="keyword">void</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//读取一次坐标</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;GetPenStartus()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get_TouchState()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取触摸笔状态</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;TOUCH_ConvertPos(</span><span class="keyword">void</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//获取转换后的实际坐标</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#endif&nbsp;/*TOUCH_H_*/</span><span>&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="cpp" style="display: none;">/*************************************************************************************************************
 * 文件名:	Touch.h
 * 功能:		S3C6410 电阻触摸屏驱动
 * 作者:		cp1300@139.com
 * 创建时间:	2012年10月6日17:31
 * 最后修改时间:2012年10月6日
 * 详细:		需要底层的ADC支持
*************************************************************************************************************/
#ifndef TOUCH_H_
#define TOUCH_H_

#include "adc.h"

#ifndef TOUCH_DOWN
	#define TOUCH_DOWN 0
#endif //TOUCH_DOWN
#ifndef TOUCH_UP
	#define TOUCH_UP 1
#endif //TOUCH_UP



//笔杆结构体
typedef struct 
{
	u16 x0;//原始坐标
	u16 y0;
	u16 x; //最终/暂存坐标
	u16 y;						   	    
	u8  Touch_Sta;//笔的状态			  
//触摸屏校准参数
	float xfac;
	float yfac;
	short xoff;
	short yoff;
}Pen_Holder;	      
extern Pen_Holder Pen_Point;//定义一个笔杆的结构变量



void TOUCH_Init(FunctionalState EnableInt);			//触摸屏初始化函数
u8 TOUCH_ReadOneTP(void);							//读取一次坐标
#define GetPenStartus()		Get_TouchState()		//获取触摸笔状态
void TOUCH_ConvertPos(void);						//获取转换后的实际坐标




#endif /*TOUCH_H_*/
</pre><br>
主函数测试程序
<p></p>
<p>main.c</p>
<p></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 372px; top: 16357px; width: 18px; height: 18px; z-index: 99;"><embed id="ZeroClipboardMovie_5" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="18" height="18" name="ZeroClipboardMovie_5" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=5&amp;width=18&amp;height=18" wmode="transparent"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="preprocessor">#include&nbsp;"system.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"uart.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"tft_lcd.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"other.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"delay.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"timer.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"touch.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//LED1闪烁程序,在定时器0中断服务程序中闪烁,周期400MS</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;LED1_flash(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;LED1_FLASH();&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="datatypes">int</span><span>&nbsp;main(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;LCD_Init();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//初始化LCD</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;UART0_Init(DISABLE,115200);&nbsp;<span class="comment">//初始化串口,失能中断接收,波特率115200</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;LED_Init();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//初始化LED</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Timer1_Init(400000-1,ENABLE,LED1_flash);&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//初始化定时器0,周期400ms</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;TOUCH_Init(DISABLE);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//初始化触摸屏</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;lcd_printf(<span class="string">"Get_FCLK&nbsp;:&nbsp;%d&nbsp;Hz\n"</span><span>,Get_FCLK());&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;lcd_printf(<span class="string">"Get_PCLK&nbsp;:&nbsp;%d&nbsp;Hz\n"</span><span>,Get_PCLK());&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>(1)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//LED2_FLASH();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//LED2闪烁</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//Delay_US(600000);</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(GetPenStartus()&nbsp;==&nbsp;TOUCH_DOWN)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">//笔按下</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TOUCH_ConvertPos();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//lcd_printf("X:%d;&nbsp;Y:%d\n",Pen_Point.x,Pen_Point.y);</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Draw_Big_Point(Pen_Point.x,Pen_Point.y,0xf800);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delay_MS(1);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="cpp" style="display: none;">#include "system.h"
#include "uart.h"
#include "tft_lcd.h"
#include "other.h"
#include "delay.h"
#include "timer.h"
#include "touch.h"


//LED1闪烁程序,在定时器0中断服务程序中闪烁,周期400MS
void LED1_flash(void)
{
	LED1_FLASH();
}



int main(void)
{	
	LCD_Init();					//初始化LCD
	UART0_Init(DISABLE,115200);	//初始化串口,失能中断接收,波特率115200
	LED_Init();					//初始化LED

	Timer1_Init(400000-1,ENABLE,LED1_flash);	//初始化定时器0,周期400ms
	TOUCH_Init(DISABLE);		//初始化触摸屏
	
	lcd_printf("Get_FCLK : %d Hz\n",Get_FCLK());	
	lcd_printf("Get_PCLK : %d Hz\n",Get_PCLK());
	
	while(1)
	{
		//LED2_FLASH();		//LED2闪烁
		//Delay_US(600000);
		if(GetPenStartus() == TOUCH_DOWN)		//笔按下
		{
			TOUCH_ConvertPos();
			//lcd_printf("X:%d; Y:%d\n",Pen_Point.x,Pen_Point.y);
			Draw_Big_Point(Pen_Point.x,Pen_Point.y,0xf800);
			Delay_MS(1);
		}
	}
}

</pre><br>
<br>
<p></p>
<p><br>
</p>
<p>//补充ADC相关寄存器结构</p>
<p></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/cp1300/article/details/7833946#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 372px; top: 17286px; width: 18px; height: 18px; z-index: 99;"><embed id="ZeroClipboardMovie_6" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="18" height="18" name="ZeroClipboardMovie_6" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=6&amp;width=18&amp;height=18" wmode="transparent"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="preprocessor">#define&nbsp;ADC_BASE&nbsp;&nbsp;&nbsp;&nbsp;0x7E00B000</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//ADC&nbsp;寄存器</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">typedef</span><span>&nbsp;</span><span class="keyword">struct</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;vu32&nbsp;&nbsp;&nbsp;&nbsp;CON;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//ADC控制寄存器&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;vu32&nbsp;&nbsp;&nbsp;&nbsp;TSC;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//触摸屏控制寄存器</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;vu32&nbsp;&nbsp;&nbsp;&nbsp;DLY;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//ADC开始延迟寄存器</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;vu32&nbsp;&nbsp;&nbsp;&nbsp;DAT0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//ADC数据寄存器0</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;vu32&nbsp;&nbsp;&nbsp;&nbsp;DAT1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//ADC数据寄存器1</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;vu32&nbsp;&nbsp;&nbsp;&nbsp;UPDN;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//触摸屏UP-DOWN寄存器</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;vu32&nbsp;&nbsp;&nbsp;&nbsp;CLRINT;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//ADC中断清除寄存器</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reserved;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;vu32&nbsp;&nbsp;&nbsp;&nbsp;CLRINTPNDNUP;&nbsp;&nbsp;&nbsp;<span class="comment">//触摸屏笔中断寄存器</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>}ADC_TypeDef;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ADC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((ADC_TypeDef*)ADC_BASE)</span><span>&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="cpp" style="display: none;">#define ADC_BASE	0x7E00B000

//ADC 寄存器
typedef struct
{
	vu32	CON;			//ADC控制寄存器 
	vu32	TSC;			//触摸屏控制寄存器
	vu32	DLY;			//ADC开始延迟寄存器
	vu32	DAT0;			//ADC数据寄存器0
	vu32	DAT1;			//ADC数据寄存器1
	vu32	UPDN;			//触摸屏UP-DOWN寄存器
	vu32	CLRINT;			//ADC中断清除寄存器
	u32		Reserved;
	vu32	CLRINTPNDNUP;	//触摸屏笔中断寄存器
}ADC_TypeDef;

#define ADC		((ADC_TypeDef*)ADC_BASE)</pre><br>
<br>
<p></p>

</div>

<!--192.168.1.237-->



            

</div>


















<div class="clear"></div>
</div>
</div>




</div>











</div>

<script>(function main() {
        var CONSTANTS = {
            PLAYER_DOM: 'object[data],embed[src],iframe[src]',
            PLAYERS: [
                {
                    find: /http:\/\/static\.youku\.com\/.*q?(player|loader)(_taobao)?\.swf/,
                    replace: 'http://player.opengg.me/loader.swf'
                },
                {
                    find: /http:\/\/js\.tudouui\.com\/.*\/TudouVideoPlayer_Homer_.*.swf/,
                    replace: 'http://player.opengg.me/TudouVideoPlayer_Homer_237.swf'
                },
                {
                    find: /http:\/\/player\.youku\.com\/player\.php\//,
                    replace: 'http://player.opengg.me/player.php/'
                },
                {
                    find: /http:\/\/www.tudou.com\/(([a-z]|programs)\/.*)/,
                    replace: 'http://player.opengg.me/td.php/$1'
                }
            ],
            SHARE_DOM: '#panel_share input,input#copyInput.txt',
            SHARES: [
                {
                    find: /http:\/\/player\.youku\.com\/player\.php\//,
                    replace: 'http://player.opengg.me/player.php/'
                },
                {
                    find: /http:\/\/www.tudou.com\/(.*v\.swf)/,
                    replace: 'http://player.opengg.me/td.php/$1'
                }
            ],
            NODEINSERTED_HACK: '@-moz-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@-webkit-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@-o-keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}@keyframes nodeInserted{from{opacity:0;}to{opacity:1;}}embed,object{animation-duration:.001s;-ms-animation-duration:.001s;-moz-animation-duration:.001s;-webkit-animation-duration:.001s;-o-animation-duration:.001s;animation-name:nodeInserted;-ms-animation-name:nodeInserted;-moz-animation-name:nodeInserted;-webkit-animation-name:nodeInserted;-o-animation-name:nodeInserted;}',
            TOGGLE_BTN: '#toggleGoogle'
        };
        var DONE = [];
        var UTIL = {
            addCss: function (str) {
                var style = document.createElement('style');
                style.textContent = str;
                document.head.appendChild(style);
            },
            reloadFlash: function (elem) {
                var nextSibling = elem.nextSibling;
                var parentNode = elem.parentNode;
                parentNode.removeChild(elem);
                if (nextSibling) {
                    parentNode.insertBefore(elem, nextSibling);
                } else {
                    parentNode.appendChild(elem);
                }
            },
            initFlash: function (elem) {
                // console.log(elem);
                if (DONE.indexOf(elem) !== -1) {
                    return;
                }
                if (this.rewriteFlash(elem)) {
                    this.reloadFlash(elem);
                    DONE.push(elem);
                }
            },
            rewriteFlash: function (elem) {
                var atrs = ['data', 'src'];
                var players = CONSTANTS.PLAYERS;
                var needReload = false;
                UTIL.forEach(atrs, function (atr) {
                    UTIL.forEach(players, function (player) {
                        if (elem[atr] && player.find.test(elem[atr])) {
                            elem[atr] = elem[atr].replace(player.find, player.replace);
                            needReload = true;
                        }
                    });
                });
                return needReload;
            },
            forEach: function (arr, callback) {
                if (this.isArrayLike(arr)) {
                    if (Array.prototype.forEach) {
                        Array.prototype.forEach.call(arr, callback);
                    } else {
                        var i = 0;
                        for (i = 0; i < arr.length; ++i) {
                            callback.call(arr[i], arr[i]);
                        }
                    }
                }
            },
            isArrayLike: function (obj) {
                if (typeof obj !== 'object') {
                    return false;
                }
                var types = ['Array', 'NodeList', 'HTMLCollection'];
                var i = 0;
                for (i = 0; i < types.length; ++i) {
                    if (Object.prototype.toString.call(obj).indexOf(types[i]) !== -1) {
                        return true;
                    }
                }
                return false;
            }
        };
        function init() {
            function onDOMNodeInsertedHandler(e) {
                var target = e.target;
                if (target.nodeType === 1 && /OBJECT|EMBED|IFRAME/ig.test(target.nodeName)) {
                    UTIL.initFlash(target);
                }
            }
            function onAnimationStartHandler(e) {
                if (e.animationName === 'nodeInserted') {
                    var target = e.target;
                    // console.log(target);
                    if (target.nodeType === 1 && /OBJECT|EMBED|IFRAME/ig.test(target.nodeName)) {
                        UTIL.initFlash(target);
                    }
                }
            }
            UTIL.addCss(CONSTANTS.NODEINSERTED_HACK);
            /*Firefox*/
            document.body.addEventListener('animationstart', onAnimationStartHandler, false);
            /*/Firefox*/
            /*Chrome*/
            document.body.addEventListener('webkitAnimationEnd', onAnimationStartHandler, false);
            /*/Chrome*/
            /*Opera 12+*/
            document.body.addEventListener('oAnimationStart', onAnimationStartHandler, false);
            /*/Opera 12+*/
            /*IE, but I never tested this*/
            document.body.addEventListener('msAnimationStart', onAnimationStartHandler, false);
            /*/IE, but I never tested this*/
            if (/Opera/.test(navigator.userAgent) && !(/Version\/12/.test(navigator.userAgent))) {
                /*Old fashion, slower maybe*/
                document.body.addEventListener('DOMNodeInserted', onDOMNodeInsertedHandler, false);
                var matches = document.body.querySelectorAll(CONSTANTS.PLAYER_DOM);
                UTIL.forEach(matches, function (elem) {
                    UTIL.initFlash(elem);
                });
            }
        }
        function tips() {
            s=document.getElementById('ab_pip');
            s.innerHTML = "";
        }
        function share(elem) {
            var pairs = CONSTANTS.SHARES;
            UTIL.forEach(pairs, function (item) {
                elem.value = elem.value.replace(item.find, item.replace);
            });
        }
        var CONTROLLER = [
            {
                host: '.',
                fn: function () {
                    init();
                }
            },
            {
                host: 'youku.com',
                fn: function () {
                    // UTIL.addCss(CONSTANTS.STYLE);
                    tips();

                    var matches = document.body.querySelectorAll(CONSTANTS.SHARE_DOM);
                    UTIL.forEach(matches, share);


                    var youkuPlayer = document.body.querySelector('.playBox');
                    var notWide = !document.body.querySelector('.playBox_thx');
                    if (youkuPlayer && notWide) {
                        youkuPlayer.className += ' playBox_thx';
                    }
                }
            },
            {
                host: 'tudou.com',
                fn: function () {
                    // UTIL.addCss(CONSTANTS.STYLE);
                    //tips();
                    var tudouPlayer = document.body.querySelector('#playerObject');
                    var normalDom = document.querySelector('.normal');
                    if (tudouPlayer && normalDom) {
                        normalDom.className = normalDom.className.replace('normal','widescreen');
                    }
                    var g = (typeof unsafeWindow !== 'undefined') ? unsafeWindow : window;
                    var TUI_copyToClip = g.TUI.copyToClip;
                    g.TUI.copyToClip = function () {
                        var matches = document.body.querySelectorAll(CONSTANTS.SHARE_DOM);
                        UTIL.forEach(matches, share);
                        TUI_copyToClip.apply(g.TUI, arguments);
                    };
                }
            }
        ];
        var host = location.host;
        function PROC(item) {
            if (host.indexOf(item.host) !== -1) {
                item.fn();
                return;
            }
        }
        UTIL.forEach(CONTROLLER, PROC);
    })();</script></body></html>