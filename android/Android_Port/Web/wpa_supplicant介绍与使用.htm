<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0054)http://blog.csdn.net/wesleyluo/article/details/8104564 -->
<html xmlns="http://www.w3.org/1999/xhtml" version="g42dymwpi--nx">
<body>




<div id="container">



        
<div id="body">
<div id="main">
<div class="main">
<div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Original"></span>
    <h3>
        <span class="link_title"><a href="./wpa_supplicant介绍与使用_files/wpa_supplicant介绍与使用.htm">
        wpa_supplicant介绍与使用
        </a></span>
    </h3>
</div>

        
    



    
<div id="article_content" class="article_content">

<p>1.什么是wpa_spplicant</p>
<p>wpa_supplicant本是开源项目源码，被谷歌修改后加入android移动平台，它主要是用来支持WEP，WPA/WPA2和WAPI无线协议和加密认证的，而实际上的工作内容是通过socket（不管是wpa_supplicant与上层还是wpa_supplicant与驱动都采用socket通讯）与驱动交互上报数据给用户，而用户可以通过socket发送命令给wpa_supplicant调动驱动来对WiFi芯片操作。 简单的说，wpa_supplicant就是WiFi驱动和用户的中转站外加对协议和加密认证的支持。</p>
<p>&nbsp;</p>
<div class="wrapper-box clearfix">
<div class="left-box"><a class="logo-box" href="http://hi.baidu.com/"><span id="baiduSpaceLogo" class="q-logo"></span></a></div>
<p class="q-menuitem">2.wpa_supplicant无线网络配置</p>
</div>
<div class="mod-page-main wordwrap clearfix">
<div class="x-page-container">
<div class="mod-blogpage-wraper">
<div class="grid-80 mod-blogpage">
<div class="mod-text-content mod-post-content mod-cs-contentblock">
<div id="content" class="content mod-cs-content text-content clearfix">
<p>&nbsp; 目前可以使用wireless-tools&nbsp;或wpa_supplicant工具来配置无线网络。请记住重要的一点是，对无线网络的配置是全局性的，而非针对具体的接口。</p>
<p>&nbsp;&nbsp; wpa_supplicant是一个较好的选择，但缺点是它不支持所有的驱动。请浏览wpa_supplicant网站获得它所支持的驱动列表。另外，wpa_supplicant目前只能连接到那些你已经配置好ESSID的无线网络。wireless-tools支持几乎所有的无线网卡和驱动，但它不能连接到那些只支持WPA的AP。</p>
<p>&nbsp;&nbsp; &nbsp;经过编译后的wpa_supplicant源程序可以看到两个主要的可执行工具：wpa_supplicant和wpa_cli。wpa_supplicant是核心程序，它和wpa_cli的关系就是服务和客户端的关系：后台运行wpa_supplicant，使用wpa_cli来搜索、设置、和连接网络。</p>
<p>&nbsp;&nbsp; &nbsp; &nbsp; 如何用wpa_supplicant使能一个wifi连接？</p>
<p>Step by step：</p>
<p>1、运行wpa_supplicant程序；</p>
<p>执行：/system/bin/wpa_supplicant -d -Dwext -iwlan0 -c/data/misc/wifi/wpa_supplicant.conf</p>
<p>其中：</p>
<p>-d ：增加调试信息</p>
<p>-Dwext ：wext，驱动名称</p>
<p>-iwlan0 ：wlan0，网络接口名称</p>
<p>/system/bin/wpa_supplicant ：wpa_supplicant可执行程序path</p>
<p>/data/misc/wifi/wpa_supplicant.conf ：wpa_supplicant的配置文件path</p>
<p>2、运行命令行工具wpa_cli ；</p>
<p>执行 ：wpa_cli -iwlan0 -p/data/system/wpa_supplicant</p>
<p>注，-p/data/system/wpa_supplicant中的wpa_supplicant并不是可执行程序，而是个控制套接字。</p>
<p>此时会进入交互模式。其中交互模式的命令如下表：</p>
<p><strong>Full command</strong></p>
<p><strong>Short command</strong></p>
<p><strong>Description</strong></p>
<p>status</p>
<p>stat</p>
<p>displays the current connection status</p>
<p>disconnect</p>
<p>disc</p>
<p>prevents wpa_supplicant from connecting to any access point</p>
<p>quit</p>
<p>q</p>
<p>exits wpa_cli</p>
<p>terminate</p>
<p>term</p>
<p>kills wpa_supplicant</p>
<p>reconfigure</p>
<p>recon</p>
<p>reloads wpa_supplicant with the configuration file supplied (-c parameter)</p>
<p>scan</p>
<p>scan</p>
<p>scans for available access points (only scans it, doesn't display anything)</p>
<p>scan_result</p>
<p>scan_r</p>
<p>displays the results of the last scan</p>
<p>list_networks</p>
<p>list_n</p>
<p>displays a list of configured networks and their status (active or not, enabled or disabled)</p>
<p>select_network</p>
<p>select_n</p>
<p>select a network among those defined to initiate a connection (ie select_network 0)</p>
<p>enable_network</p>
<p>enable_n</p>
<p>makes a configured network available for selection (ie enable_network 0)</p>
<p>disable_network</p>
<p>disable_n</p>
<p>makes a configured network unavailable for selection (ie disable_network 0)</p>
<p>remove_network</p>
<p>remove_n</p>
<p>removes a network and its configuration from the list (ie remove_network 0)</p>
<p>add_network</p>
<p>add_n</p>
<p>adds a new network to the list. Its id will be created automatically</p>
<p>set_network</p>
<p>set_n</p>
<p>shows a very short list of available options to configure a network when supplied with no parameters.</p>
<p>See next section for a list of extremely useful parameters to be used with set_network and get_network.</p>
<p>get_network</p>
<p>get_n</p>
<p>displays the required parameter for the specified network. See next section for a list of parameters</p>
<p>save_config</p>
<p>save_c</p>
<p>saves the configuration</p>
<br>
<p>设置网络的基本格式：set_network &lt;network id&gt; &lt;key&gt;&lt;parameter&gt; [&lt;parameter&gt;]</p>
<p>显示网络信息的基本格式：get_network &lt;network id&gt; &lt;key&gt;</p>
<p>相应的参数如下表：</p>
<p><strong>Key</strong></p>
<p><strong>Description</strong></p>
<p><strong>Parameters</strong></p>
<p>ssid</p>
<p>Access point name</p>
<p>string</p>
<p>id_str</p>
<p>String identifying the network</p>
<p>string</p>
<p>priority</p>
<p>Connection priority over other APs</p>
<p>number (0 being the default low priority)</p>
<p>bssid</p>
<p>Mac address of the access point</p>
<p>mac address</p>
<p>scan_ssid</p>
<p>Enable/disbale ssid scan</p>
<p>0, 1, 2</p>
<p>key_mgmt</p>
<p>Type of key management</p>
<p>WPA-PSK, WPA_EAP, None</p>
<p>pairwise</p>
<p>Pairwise ciphers for WPA</p>
<p>CCMP, TKIP</p>
<p>group=TKIP</p>
<p>Group ciphers for WPA</p>
<p>CCMP, TKIP, WEP104, WEP40</p>
<p>psk</p>
<p>Pre-Shared Key (clear or encrypted)</p>
<p>string</p>
<p>wep_key0</p>
<p>WEP key (up to 4: wep_key[0123])</p>
<p>string</p>
<p>eap</p>
<p>Extensible Authentication Protocol</p>
<p>MD5, MSCHAPV2, OTP, GTC, TLS, PEAP, TTLS</p>
<p>identity</p>
<p>EAP identity string</p>
<p>string</p>
<p>password</p>
<p>EAP password</p>
<p>string</p>
<p>ca_cert</p>
<p>Pathname to CA certificate file</p>
<p>/full/path/to/certificate</p>
<p>client_cert</p>
<p>Pathname to client certificate</p>
<p>/full/path/to/certificate (PEM/DER)</p>
<p>private_key</p>
<p>Pathname to a client private key file</p>
<p>/full/path/to/private_key (PEM/DER/PFX)</p>
<p>eg.1、连接无加密的AP</p>
<p>&gt;add_network &nbsp;(It will display a network id for you, assume it returns 0)</p>
<p><strong>&gt;set_network 0 ssid "666"</strong></p>
<p><strong>&gt;set_network 0 key_mgmt NONE</strong></p>
<p><strong>&gt;enable_network 0</strong></p>
<p><strong>&gt;quit</strong></p>
<p><strong>eg.2、连接WEP加密AP</strong></p>
<p><strong>&gt;add_network &nbsp; (assume return 1)</strong></p>
<p><strong>&gt;set_network 1 ssid "666"</strong></p>
<p><strong>&gt;set_network 1 key_mgmt NONE</strong></p>
<p><strong>&gt;set_network 1 wep_key0 "your ap password"</strong></p>
<p><strong>&gt;enable_network 1</strong></p>
<p><strong>eg.3、连接WPA-PSK/WPA2-PSK加密的AP</strong></p>
<p><strong>&gt;add_network &nbsp; (assume return 2)</strong></p>
<p><strong>&gt;set_network 2 ssid "666"</strong></p>
<p><strong>&gt;set_network 2 psk "your pre-shared key"</strong></p>
<p>&gt;enable_network 2</p>
<p>到此，wifi模块就能连接上AP了。</p>
<p>3、以上是通过命令行工具wpa_cli来实现wifi网络的连接。当然，也可以通过wpa_supplicant的配置文件来实现连接。</p>
<p>再回顾下运行wpa_supplicant时执行的命令：</p>
<p>/system/bin/wpa_supplicant -d -Dwext -iwlan0 -c/data/misc/wifi/wpa_supplicant.conf</p>
<p>我们在执行时加上了-c/data/misc/wifi/wpa_supplicant.conf，我们可以将我们要连接的AP的设置以一定的格式写入wpa_supplicant.conf配置文件中即可。</p>
<p>eg.&nbsp;</p>
<p>ctrl_interface=DIR=/data/system/wpa_supplicant&nbsp;GROUP=system update_config=1</p>
<p>network={</p>
<p>ssid="my access point"</p>
<p>proto=WPA</p>
<p>key_mgmt=WPA-PSK</p>
<p>psk="you pass words"</p>
<p>}</p>
<p>&nbsp;</p>
</div>
</div>
</div>
</div>
</div>
</div>

</div>





    
</div>



















</div>
</div>




</div>












</div>

</body></html>